{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A notify speech action is intended to communicate the occurrence of an event of some form. In the context of software systems it corresponds to a message being sent on a named channel; however that seems low level in comparison.\
The form of a notify is a little different to the query:\
notify 
\i Agent
\i0  with 
\i Expression
\i0  on 
\i Channel
\i0 \
To notify Ag that there is a new stock item might take the form:\
notify Ag with\
  ("MS-345","3/4in Machine Screw")\
  on stock\
The content here is the tuple term\
("MS-345","3/4in Machine Screw")\
and stock is the \'91channel\'92 of communication. In order for this to be valid we have to assign a new element to Ag\'92s API interface \'96 one that defines stock and the type of event it may respond to:\
type myAPI is alias of \{\
  products:list of (string,string)\
  quantity:(string)=>integer\
  stock:occurrence of (string,string)\
\}\
Here we mark the ability to notify on the stock channel by giving stock an occurrence type. Later, when we look at how agents can be implemented, we will see how notifications are handled. For now, we note that occurrence of (string,string) denotes a program that can consume events whose data consists of values of tuple type (string,string).}