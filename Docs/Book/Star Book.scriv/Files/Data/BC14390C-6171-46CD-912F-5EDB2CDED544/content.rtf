{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \expnd0\expndtw0\kerning0
What does it mean to have a type in a record? From a programmer\'92s point of view it is actually quite a natural extension of the concept of a record; there does not seem to be any intrinsic reason why a record shouldn\'92t have types in it. However, the logic of this bears a deeper look.\
The declaration of the foo type involves the use of an 
\i \cf2 existential
\i0 \cf2  quantifier:\
simple:exists f/1 ~~ \{\
  foo ~> f.\
  ...\
\}\
The meaning of an existentially quantified type is complementary to the universally quantified type. An existential type quantification is an assertion that the type exists, in this case that foo exists and is a type constructor of 1 argument.}