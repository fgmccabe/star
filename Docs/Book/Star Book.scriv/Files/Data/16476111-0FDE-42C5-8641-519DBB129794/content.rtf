{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \expnd0\expndtw0\kerning0
It is a commonplace in software engineering that you should not try to \'91boil the ocean\'92; which is a synonym for \'91biting off more than you can chew\'92. However, it 
\i is
\i0  possible to build very large scale systems if you approach it in the right way. This is the purview of architecture and of software development teams.\
\pard\tx720\tx1080\tx1440\li720\sl264\slmult1\sb240\sa240\pardirnatural\partightenfactor0

\f1\fs24 \cf2 <$Scr_Ps::0>
\f0 The \'91right\'92 way to boil an ocean is one cup at a time. The \'91smart\'92 way to do it is to build a machine that makes cups that boil the ocean.\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1 \cf2 <!$Scr_Ps::0>
\f0\fs26 Building software in the context of a team is quite different to writing individual functions in a program. It is not enough for your code to compute the correct function; it must also interact properly with the environment it is in. As a result, professional programmers find themselves often more concerned with making sure that all the \'91pieces\'92 are in the right place than simply the correctness of an {\field{\*\fldinst{HYPERLINK "scrivcmt://A6311D48-1B8F-409D-BF3D-02948033C9BC"}}{\fldrslt algorithm.}} Interfaces, contracts, APIs and integration issues often dominate the system builder\'92s landscape.\
One\'92s attitude to basic language features like types is also different: having to deal with the knowledge that is in your co-worker\'92s head (and not in yours) should be enough to convince anyone of the merits of strong static types.\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\b \cf2 Star
\b0 \cf2 \'92s modularity features are built from the same functional programming foundation as the other features of the language. This has important implications for the programmability of larger systems.}