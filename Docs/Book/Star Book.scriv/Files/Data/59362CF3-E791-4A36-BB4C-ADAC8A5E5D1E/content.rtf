{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \expnd0\expndtw0\kerning0
A rendezvous is an object describing an event that may or may not happen in the future. The basic operation for a rendezvous is 
\i \cf2 waiting for
\i0 \cf2  the event, and when the event happens, it may yield or consume a value.\
This is reflected in the rendezvous type itself:\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 \kerning1\expnd0\expndtw0 <$Scr_Ps::0>
\f2\fs22 all t ~~ rendezvous[t]\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf2 \expnd0\expndtw0\kerning0
<!$Scr_Ps::0>
\f0\fs26 One of the simplest forms of rendezvous denotes a 
\i \cf2 timeout
\i0 \cf2 :\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 \kerning1\expnd0\expndtw0 <$Scr_Ps::0>
\f2\fs22 timeoutRv:(integer) => rendezvous[()].\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf2 \expnd0\expndtw0\kerning0
<!$Scr_Ps::0>
\f0\fs26 The rendezvous returned by 
\f1\fs24 \cf0 \kerning1\expnd0\expndtw0 <$Scr_Cs::1>
\f2\fs22 timeoutRv(10)
\f1\fs24 \cf2 \expnd0\expndtw0\kerning0
<!$Scr_Cs::1>
\f0\fs26  describes an \'91\'91alarm clock\'92\'92 event that happens 10 milliseconds in the future. Note that the type of the rendezvous returned specifies 
\f1\fs24 \cf0 \kerning1\expnd0\expndtw0 <$Scr_Cs::1>
\f2\fs22 ()
\f1\fs24 \cf2 \expnd0\expndtw0\kerning0
<!$Scr_Cs::1>
\f0\fs26  as the type of the value yielded by the event - the timeout event provides no information other than that it happened.\
It may seem a little odd that a rendezvous \'97 which is after all a meeting \'97 is denoted by an actual value. The primary reason for this is that is allows specific synchronizations between tasks to be 
\i \cf2 computed
\i0 \cf2 , not just 
\i \cf2 programmed
\i0 \cf2 . This is a simple but major departure from the approach taken to concurrency by languages that support locking features; but is actually highly reminiscent of Unix\'92s select function.\
Timeouts can be useful in their own right, but they are commonly used in conjunction with other rendezvous. The pattern being that if one of the other \'91things going on\'92 does 
\i \cf2 not
\i0 \cf2  happen, then the timeout will tell us that. However, 
\i \cf2 recovering
\i0 \cf2  from a timeout can be very problematic \'97 since you now have to decide what to do about the other activities that were pending.}