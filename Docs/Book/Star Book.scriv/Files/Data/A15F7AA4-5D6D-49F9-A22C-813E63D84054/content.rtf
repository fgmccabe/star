{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \expnd0\expndtw0\kerning0
It should be clear at this point that 
\b \cf2 Star
\b0 \cf2  is quite a rich language. There are many features and 
\i sub-languages
\i0  that form the whole. We have seen several of these, including quite complex features like queries. In Chapter  we will also see a sophisticated sub-language based on actors and speech actions. It may surprise you to learn that the core of 
\b \cf2 Star
\b0 \cf2  is quite small, with many features implemented in 
\b \cf2 Star
\b0 \cf2  itself. Our task now is to introduce you to some of the techniques available to build your own extensions.\
One of the most fundamental and surprisingly difficult issues in language design is whether to allow \'91regular\'92 programmers to extend it. Different language communities have taken radically different stances to this: languages like C/C++ and the LISP family were designed to be extensible by the {\field{\*\fldinst{HYPERLINK "scrivcmt://178F828C-72A4-4E5E-B225-28EB2BAE8DA2"}}{\fldrslt \cf2 programmer.}} On the other hand, the Java designers explicitly chose not to include any form of macro feature \'97 their rationale being that macros make it easy to confuse programmers with strange syntax features.\
However, no language that is in active use is fixed. Simply using a programming language is often enough to point to ways in which it might be improved; and language stewards are understandably interested in ensuring the continued relevance of the language in their care by augmenting it with new features.\
In the end, it reduces to a question of democracy on the one hand and a curated environment on the other. Language designers can choose to allow evolution to occur \'91in the wild\'92 or can choose to try to control it with a disciplined process.\
Neither strategy is inherently better than the other. Both carry risks. A bottom-up approach risks splintering and difficulties with effective tooling. A top-down approach is often slower and more deliberate; which can mean being made irrelevant in a fast paced world. It also can put users in a difficult situation \'96 if a potentially useful feature is missing from the language.\
For better or {\field{\*\fldinst{HYPERLINK "scrivcmt://CC550777-45FF-4D9F-934D-9623AB6A8626"}}{\fldrslt \cf2 worse,}} 
\b \cf2 Star
\b0 \cf2  was designed to allow programmers to extend it without requiring changes to the basic compiler \'97 i.e., the language has facilities to support its own evolution and, particularly, the development of 
\i Domain Specific Languages
\i0 .\
Although 
\b \cf2 Star
\b0 \cf2  permits regular programmers to define extensions, you should be prepared for some difficult and complex topics. Designing and extending programming languages is a subtle art that calls for some obscure concepts at times.\
On the other hand, designing for extensibility does not necessarily mean adopting macro language features like those in either C/C++ or LISP. Designing the language extensibility features needs to be done with the same care as the \'91main\'92 language.\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\b \cf2 Star
\b0 \cf2 \'92s has a well developed set of language elements that are designed to make it easier to develop reliable extensions to the core language. The primary features involved are:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl264\slmult1\pardirnatural\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
an extensible grammar \'97 allowing new operators to be defined;\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
a rule-based system for defining 
\i well-formed notations
\i0 ; and\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
a powerful 
\i macro language system
\i0  that is used to implement extensions by mapping them to core language elements.\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0
\cf2 Together, there are sufficient facilities for making a huge range of potential extensions and sub-languages.}