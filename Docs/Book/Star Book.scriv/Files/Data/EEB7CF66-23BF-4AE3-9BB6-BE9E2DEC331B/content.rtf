{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\b\fs26 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Star
\b0  has a 
\i meta language
\i0  and a standard type to go with it. This means that expressions in the language may also be values. For example, consider the expression:\
X+2\
If the value of X is 3, then the value of this expression is 5. However, we can also examine the language that this expression is made of \'97 by using the quote notation. The expression:\
<| X+2 |>\
means the 
\i name
\i0  of the expression; for compiler-buffs this is effectively the 
\i abstract syntax tree
\i0  of the expression. 
\b Star
\b0  has a standard type \'97 quoted \'97 whose abbreviated type definition is:\
type quoted is nameAst(string)          -- identifier\
            or integerAst(integer)      -- integer literal\
            or applyAst(quoted,quoted)  -- application\
            or tupleAst(list[quoted]) -- tuple term\
            ...\
and the quoted expression above is equivalent to:\
applyAst(nameAst("+"),tupleAst(list of [nameAst("X"),integerAst(2)]))\
Clearly, the quoted term is a lot less noisy than the \'91real\'92 version. The power of the meta language comes from the fact that any fragment of 
\b Star
\b0  may be represented in the meta language \'97 even fragments that are not part of the base language. It is also the basis of 
\b Star
\b0 \'92s macro processing capabilities.\
Any macro (whether its a macro rule or a code macro) is a function whose type signature is:\
(quoted)=>quoted\
The special feature of macro programs is that they are invoked by the compiler on the source program itself \'97 hence the \'91meta\'92 in \'91meta-language\'92.}