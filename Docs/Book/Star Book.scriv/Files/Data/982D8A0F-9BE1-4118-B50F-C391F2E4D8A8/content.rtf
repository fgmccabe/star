{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \expnd0\expndtw0\kerning0
 A structural type is, informally, a type that looks like a value. For example, the type\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 \kerning1\expnd0\expndtw0 <$Scr_Ps::0>
\f2\fs22 (integer,string,employee)\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf2 \expnd0\expndtw0\kerning0
<!$Scr_Ps::0>
\f0\fs26 is a 
\i \cf2 tuple type
\i0 \cf2  \'96 it denotes the type of a triple of values, consisting of an integer, a string and an employee in this case.\

\b Star
\b0  has several forms of structural type, the tuple type is one of them; others include 
\i \cf2 record types
\i0 \cf2  and 
\i \cf2 function types
\i0 \cf2 .\
We shall see more of these as we introduce the rest of the language. However, it is worth pausing to ask the question 
\i \cf2 Why?
\i0 \cf2  Briefly, nominative types help the programmer focus on what a value 
\i \cf2 denotes
\i0 \cf2 ; whereas structural types tend to expose what a value can 
\i \cf2 do
\i0 \cf2 .\
For example, the employee type clearly points to what an employee value is intended to denote (an employee!), but does not help if we want to know what an employee can do. On the other hand, the function type in the annotation:\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 \kerning1\expnd0\expndtw0 <$Scr_Ps::0>
\f2\fs22 f : (integer)=>string\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf2 \expnd0\expndtw0\kerning0
<!$Scr_Ps::0>
\f0\fs26 clearly indicates what one can use 
\f1\fs24 \cf0 \kerning1\expnd0\expndtw0 <$Scr_Cs::1>
\f2\fs22 f
\f1\fs24 \cf2 \expnd0\expndtw0\kerning0
<!$Scr_Cs::1>
\f0\fs26  to do, but it does not indicate anything about why you would want to (except, perhaps, to convert an integer to a string).\
In summary, use nominative types when you are modeling \'91real world\'92 entities and structural types when the focus is on operations and structure more than on what the intention is. In practice, of course, you will use both in some combination.}