{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 \
[[enumSymbol]]\
(((constructor,enumerated symbol)))\
(((enumerated symbol)))\
(((type,enumerated)))\
\
An enumerated symbol is written as an identifier. The fact that an identifier has been mentioned in a type definition is sufficient to `mark' it as a value -- and not as a variable for example.\
\
[[enumSymbolFig]]\
.Enumerated Symbols\
****\
[[EnumeratedSymbol]]EnumeratedSymbol::=<<Identifier>>\
****\
\
The standard type `boolean` is defined in terms of two enumerated symbols: `true` and `false`:\
[listing]\
boolean ::= true | false\
\
\
[NOTE]\
An enumerated symbol must be unique across all types within the scope of the type definition.\
\
====}