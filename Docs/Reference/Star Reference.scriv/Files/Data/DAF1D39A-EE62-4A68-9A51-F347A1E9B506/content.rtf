{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 Multi-word Identifiers\
(((identifier,multi-word)))\
(((multiple word identifiers)))\
\
A <<MultiWordIdentifier>> is an <<Identifier>> that is written as a contiguous sequence of alphanumeric words. Although written as multiple words, a <<MultiWordIdentifier>> is logically a _single_ identifier. For example, the combination of words:\
[listing]\
such that\
\
is logically a single multi-word identifier whose name is `such that`.\
\
\
[[multiWordIentifierFig]]\
.Multi-Word Identifier\
****\
[[MultiWordIdentifier]]MultiWordIdentifier::=<<AlphaNumeric>>+\
****\
\
There are a few standard <<MultiWordIdentifier>>s, as outlined in <<multiWords>>. In addition, <<MultiWordIdentifier>>s can be defined as operators (see <<multiWordOperators>>).\
\
[[multiWords]]\
.Multi-Word Keywords\
[cols="4*"]\
|===\
`any of` | `is tuple` | `group by` | `has value` |\
`such that` | `counts as` | `for all` | `order by` |\
`order descending by` | `has kind` | `instance of` | `descending by` |\
`has type` | `bound to` | `or else` | `on abort` |\
|===\
\
Parts of a <<MultiWordIdentifier>> may be separated by spaces and/or comments.\
\
If a part of a <<MultiWordIdentifier>> occurs out of sequence, i.e., not as part of the sequence that defines the identifier, then it is interpreted as a normal <<AlphaNumeric>> identifier.\
\
[[operatorDefinedTokens]]\
===}