{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 \
[[countsAs]]\
\
A <<TypeWitness>> definition declares that a given type exists. It is used to assert that a given existential type exists.\
\
\
[[typeCountsAsFig]]\
.Type Witness Statement\
****\
[[TypeWitness]]TypeWitness ::= `type` <<Identifier>> `=` <<Type>>\
****\
\
For example, in the expression:\
[listing]\
group\{\
  type elem = integer;\
  inv(X) => -X;\
  op(X,Y) => X+Y;\
  zero = 0;\
\}\
\
the statement:\
[listing]\
type elem = integer;\
\
asserts that the type `integer` is a witness for the existentially quantified type `elem`.\
[NOTE]\
<<TypeWitness>> statements are inherently internal statements: the witness type itself is not exposed by the record that contains the <<TypeWitness>> statement.\
\
==}