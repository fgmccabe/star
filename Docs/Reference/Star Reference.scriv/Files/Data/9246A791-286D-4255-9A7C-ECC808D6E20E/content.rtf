{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 Labeled records denote constructors whose elements are addressed by name rather than by argument position. A labeled record specification consists of a collection 
\i TypeAnnotations
\i0 . In addition, the record specification may include default values for some (or all) of the attributes of the record.\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f0\i\fs26 RecordConstructor ::= Identifier `
\f1\i0\fs24 <$Scr_Cs::3>
\f2\fs22 \{
\f1\fs24 <!$Scr_Cs::3>
\f0\i\fs26 ` ElementType .. ElementType `
\f1\i0\fs24 <$Scr_Cs::3>
\f2\fs22 \}
\f1\fs24 <!$Scr_Cs::3>
\f0\i\fs26 `\
ElementType ::= TypeAnnotation\
  | Identifier `
\f1\i0\fs24 <$Scr_Cs::3>
\f2\fs22 default
\f1\fs24 <!$Scr_Cs::3>
\f0\i\fs26 ` `
\f1\i0\fs24 <$Scr_Cs::3>
\f2\fs22 =
\f1\fs24 <!$Scr_Cs::3>
\f0\i\fs26 ` Expression\
  | Identifier `
\f1\i0\fs24 <$Scr_Cs::3>
\f2\fs22 default
\f1\fs24 <!$Scr_Cs::3>
\f0\i\fs26 ` `
\f1\i0\fs24 <$Scr_Cs::3>
\f2\fs22 :=
\f1\fs24 <!$Scr_Cs::3>
\f0\i\fs26 ` Expression\
  | DefltEquation\
  | `
\f1\i0\fs24 <$Scr_Cs::3>
\f2\fs22 assert
\f1\fs24 <!$Scr_Cs::3>
\f0\i\fs26 ` Condition\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl264\slmult1\sa160\pardirnatural\qc\partightenfactor0

\f1\i0\fs24 \cf0 <!$Scr_Ps::0><$Scr_Ps::1>
\f0\fs26 Labeled Record Constructor\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::1>
\f0\fs26 If there is more than one record constructor for a type then any attributes that they have in common must have the same type associated with them. For example, the type definition for a two-three tree structure:\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::2>
\f2\fs22 all s ~~ twoThree[s] ::=\
  three\{left:twoThree[s]. \
        label:s.\
        right:twoThree[s]\
       \}\
  | two\{left:twoThree[s]. right:twoThree[s] \}\
  | empty;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl264\slmult1\sa160\pardirnatural\qc\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::2><$Scr_Ps::1>
\f0\fs26 A 
\f1\fs24 <$Scr_Cs::3>
\f2\fs22 twoThree
\f1\fs24 <!$Scr_Cs::3>
\f0\fs26  tree type\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::1>
\f0\fs26 The 
\f1\fs24 <$Scr_Cs::3>
\f2\fs22 left
\f1\fs24 <!$Scr_Cs::3>
\f0\fs26  and 
\f1\fs24 <$Scr_Cs::3>
\f2\fs22 right
\f1\fs24 <!$Scr_Cs::3>
\f0\fs26  attributes in the two constructors are required to have the same type because they are shared by the two records.\
[TIP] Notice how the type annotations for the 
\f1\fs24 <$Scr_Cs::3>
\f2\fs22 left
\f1\fs24 <!$Scr_Cs::3>
\f0\fs26  and 
\f1\fs24 <$Scr_Cs::3>
\f2\fs22 right
\f1\fs24 <!$Scr_Cs::3>
\f0\fs26  sub-tree uses the same type identifier as in the definition itself. This marks 
\f1\fs24 <$Scr_Cs::3>
\f2\fs22 twoThree
\f1\fs24 <!$Scr_Cs::3>
\f0\fs26  as a recursive type.\
}