{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 \
== Algebraic Constructor Expressions\
[[algebraicConstructors]]\
\
The <<AlgebraicConstructor>> expressions are those that refer to constructors that are defined in <<AlgebraicType>> definitions -- _or those that arise from standard type schemas such as tuples and anonymous records_.\
\
There are two primary forms of <<AlgebraicConstructor>>s: positional <<ConstructorLiteral>> terms and <<RecordLiteral>> terms.\
\
Records allow their fields to be addressed individually.\
\
\\begin\{figure\}[htbp]\
\\begin\{eqnarray*\}\
[[AlgebraicConstructor]]AlgebraicConstructor::=<<EnumeratedSymbol>>\\\\\
  | <<ConstructorLiteral>>\\\\\
  | <<TupleLiteral>>\\\\\
  | <<RecordLiteral>>\\\\\
  | <<AnonymousRecord>>\\\\\
  | <<RecordAccess>>\\\\\
  | <<SequenceExpression>>\
\\end\{eqnarray*\}\
.Algebraic Constructor Expressions\
[[algebraicExpressionFig]]\
\\end\{figure\}}