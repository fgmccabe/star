{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 \
=== Type Coercion Expression\
[[typeCoercionExpression]]\
[[typeCoercionContract]]\
(((expressions,type coercion)))\
(((type coercion expression)))\
A <<TypeCoercion>> expression denotes a conversion of a value from one type to another.\
\
\\begin\{figure\}[htbp]\
\\begin\{eqnarray*\}\
[[TypeCoercion]]TypeCoercion::=`(`<<Expression>>\\ `as`\\ <<Type>>`)`\
\\end\{eqnarray*\}\
.Type Coercion Expression\
[[typeCoercionExpressionFig]]\
\\end\{figure\}\
\
The primary difference between _type casting_ and _type coercion_ is that the former can never result in any change in the value under consideration. For example, coercing a `float` value to an `integer` value has the potential to change the value (stripping any fractional part of the value).\
\
Type coercion is supported by a special `coercion` <<Contract>> shown in Program~\\vref\{typeCoercionContractFig\}.\
\
\\begin\{program\}\
[listing]\
contract coercion over (s,t) is \{\
  coerce has type (s)=>t\
\};\
\
[[typeCoercionContractFig]]\
.Coercion Contract `coercion`\
\\end\{program\}\
\
\\begin\{aside\}\
Specifically, an expression of the form:\
[listing]\
X as integer\
\
is equivalent to the expression:\
[listing]\
(coerce(X) has type integer)\
\
where the `... has type integer` has the effect of declaring that the expression has type `integer` and the `coerce` function is an overloaded function that references a type-specific implementation -- based on the source type of `X` and `integer`.\
\\end\{aside\}\
\
There are many standard coercions available, as listed in <<standardCoercions>>. However, it is also possible for a programmer to define their own type coercion by appropriately implementing the `coercion` contract.\
\
\
\\begin\{table\}\
.Standard Type Coercions[[standardCoercions]]\
\\begin\{center\}\
\\begin\{tabular\}\{|ll|ll|ll|\}\
\\hline\
Source Type&Target Type&Source&Target&Source&Target\\\\\
\\hline\
`string`&`integer`&\
`integer`&`string`&\
`string`&`long`\\\\\
`long`&`string`&\
`string`&`fixed`&\
`fixed`&`string`\\\\\
`string`&`float`&\
`float`&`string`&\
`string`&`decimal`\\\\\
`decimal`&`string`&\
`integer`&`long`&\
`integer`&`fixed`\\\\\
`integer`&`float`&\
`integer`&`decimal`&\
`long`&`integer`\\\\\
`long`&`fixed`&\
`long`&`float`&\
`long`&`decimal`\\\\\
`float`&`integer`&\
`float`&`long`&\
`float`&`fixed`\\\\\
`float`&`decimal`&\
`decimal`&`integer`&\
`decimal`&`long`\\\\\
`decimal`&`fixed`&\
`decimal`&`float`&&\\\\\
\\hline\
\\end\{tabular\}\
\\end\{center\}\
\\end\{table\}\
}