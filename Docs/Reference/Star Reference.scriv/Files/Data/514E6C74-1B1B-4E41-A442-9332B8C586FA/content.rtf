{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 An operator may consist of a single 
\i Identifier
\i0 , a sequence of 
\i Identifiers
\i0  or it may consist of a 
\i QuotedIdentifier
\i0  containing a sequence of so-called symbolic characters. In this form, the first character of the operator may not be a digit or a letter. In addition, none of the characters may be a space or other white-space character.\
However, other than these constraints the characters in the operator declaration may be any legal unicode character.\
[TIP] For the sake of programmers' sanity we strongly suggest not using characters that overlap with other categories. For example, do not include a parenthesis in the operator name.\
For example, the declaration:\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 #infix(\'91**\'92,700).
\f0\fs26 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 declares 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 **
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  to be a new infix operator.\
The lexical analyzer is able to incorporate the newly declared operator as a distinct token. Thus, for example, with the declaration above, 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 **
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  becomes a distinct token to the normal symbol for multiplication.}