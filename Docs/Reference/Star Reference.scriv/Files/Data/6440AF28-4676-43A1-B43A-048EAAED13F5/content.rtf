{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 A type expression of the form:\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 c[t\sub 1\nosupersub ,...,t\sub n\nosupersub ]
\f0\fs26 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 where 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 c
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  is a\
type variable -- i.e., bound by a quantifier -- denotes a rather special form of type: a type constructor expression. Like other parameterized type expressions, this expression does not denote a single type; but a set of types. For example, the type expression:\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 c[integer]
\f0\fs26 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 denotes a type `something of 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 integer
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26 '.\
A subsequent constraint on 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 c
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  may cause it to be bound to the 
\i TypeConstructor
\i0  
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 cons
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  (say), in which case the type expression becomes ground to the parameterized type expression 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 cons[integer]
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26 .\
Such type expressions are of most use in certain forms of 
\i Contract
\i0  where the contract is about a certain form of parameterized type.\
}