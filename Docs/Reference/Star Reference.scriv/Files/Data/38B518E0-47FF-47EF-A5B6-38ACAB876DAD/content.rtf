{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 String interpolation refers to the embedding of variables and expressions in string literals. The actual string value of an interpolated `string` literal requires the evaluation of those variables and expressions.\
For example, given a variable 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 X
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  with the value 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 24
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26 , then:\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 "this has the value of X: \\(X)\'94\
\'93\\(X*X) people saw this"
\f0\fs26 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 would have values:\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 "this has the value of X: 24"\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\fi720\sl288\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 and\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 "576 people saw this"
\f0\fs26 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 respectively.\
There are two modes of string interpolation: the dollar form corresponds to displaying a value and the hash form corresponds to coercing a value to a 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 string
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  value. The former produces a string which is intended to be parseable as the original value. It is also the form that is universally supported by all non-programmatic types.\
[NOTE:] If a 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 string
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  interpolation expression itself contains a string, the various quoting mechanisms for strings apply to that string also. I.e., it is not necessary to double-quote strings within 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 string
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  interpolation expressions.\
For example, the 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 string
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  expression in:\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 logMsg(info,"The price of cheese is \\(priceOf("cheese"))")
\f0\fs26 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 works as expected: the argument to the 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 priceOf
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  function is the string literal 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 "cheese"
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26 . An even more nested example is:\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 logMsg(info,"The price of \\(P) is \\(priceOf("SKU$(P)\'94))\'94)
\f0\fs26 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 In this example, we have a `string` interpolation expression embedded within another `string` interpolation expression.\
An 
\i Interpolation
\i0  expression may be followed by a 
\i FormattingSpec
\i0 . If present, then this specification is used to guide how values are formatted.\
For example, the value of\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 "--\\(120345567):999,999,999,999;--"
\f0\fs26 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 is the string:\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 "--120,345,567--"
\f0\fs26 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 Detailed formatting is controlled by the 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 format
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  contract which in turn means that different types of expression will have type appropriate ways of specifying the formatting.}