{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 There are a number of keywords which are reserved by the language -- these may not be used as identifiers or in any other role.\
\
This table lists the standard keywords:\
\
`memo` | `request` |\
`for` | `merge` | `spawn` |\
`alias` | `all` | `not` | `substitute` |\
`all` |\
`and` | `from` | `notify` | `suchthat` |\
`any` | `fun` | `of` | `switch` |\
`any of` | `function` | `on` | `sync` |\
`has` | `on abort` | `then` |\
`as` | `has kind` | `open` | `to` |\
`assert` | `has type` | `or` | `try` |\
`bound to` | `hastype` | `order by` | `tuple` |\
`case` | `identifier` | `order descending by` | `type` |\
`cast` | `if` | `otherwise` | `unique` |\
`catch` | `ignore` | `over` | `unquote` |\
`computation` | `implementation` | `package` | `update` |\
`contract` | `implements` | `pattern` | `using` |\
`counts as` | `implies` | `perform` | `valis` |\
`def` | `import` | `valof` |\
`default` | `in` | `private` |\
`delete` | `instance of` | `procedure` | `waitfor` |\
`descending by` | `is` | `when` |\
`determines` | `is tuple` | `query` | `where` |\
`do` | `java` | `quote` | `while` |\
`down` | `kind` | `raise` | `with` |\
`else` | `let` | `reduction` |\
`exists` | `matches` | `ref` | `yield` |\
`extend` | `matching` | `remove`\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl264\slmult1\sa160\pardirnatural\qc\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f0\fs26 Standard Keywords\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 \
[TIP] On those occasions where it is important to have an identifier that is a keyword it is possible to achieve this by enclosing the keyword in single quotes.\
\
For example, while 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 type
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  is a keyword in the language; enclosing the word in quotes: 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 \'91type\'92
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  has the effect of suppressing the keyword interpretation (and its operator interpretation).\
Enclosing a name in parentheses also has the effect of suppressing any operator information about the name.}