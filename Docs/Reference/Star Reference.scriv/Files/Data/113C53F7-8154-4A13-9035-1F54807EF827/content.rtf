{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 The character code notation allows a number to be based on the Unicode CodePoint value of a character. Any Unicode character code point can be entered in this way:\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 0cX 0c[ 0c\\n 0c
\f0\fs26 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 For example, 
\f1\fs24 <$Scr_Cs::3>
\f2\fs22 0c\\n
\f1\fs24 <!$Scr_Cs::3>
\f0\fs26  is the codepoint associated with the new line character, i.e., its value is 
\f1\fs24 <$Scr_Cs::3>
\f2\fs22 10
\f1\fs24 <!$Scr_Cs::3>
\f0\fs26 .\
[TIP] Unicode has the capability to represent up to one million character code points.\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::1>
\f0\i\fs26 CharacterCode::=
\f1\i0\fs24 <$Scr_Cs::3>
\f2\fs22 0c
\f1\fs24 <!$Scr_Cs::3>
\f0\i\fs26 CharRef\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl264\slmult1\sa160\pardirnatural\qc\partightenfactor0

\f1\i0\fs24 \cf0 <!$Scr_Ps::1><$Scr_Ps::2>
\f0\fs26 Character Codes\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::2>
\f0\fs26 [TIP] A 
\i CharacterCode
\i0  is an 
\f1\fs24 <$Scr_Cs::3>
\f2\fs22 integer
\f1\fs24 <!$Scr_Cs::3>
\f0\fs26 . This notation allows string processing programs to represent character CodePoint values in a natural way.}