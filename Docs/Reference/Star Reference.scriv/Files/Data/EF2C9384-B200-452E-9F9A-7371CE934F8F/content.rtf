{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 In some cases, the regular implementation of a contract by be predicted by examining the algebraic type definition itself. The Star compiler automatically generates implementations of the 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 equality
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  and the 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 pPrint
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  contracts, for example, by inspecting the type definition itself.\
A programmer may extend this system of atomically implementing contracts by implementing a special macro whose name is of the form 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 implement_name
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26 . A type definition that is marked:\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 person ::= some\{\
  name:string;\
\} | noOne\
  implementing Spec
\f0\fs26 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 will result in the macro 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 implement_Spec
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  being invoked on the type definition.\
This is used, for example, to allow coercion between types and the standard 
\f1\fs24 <$Scr_Cs::1>
\f2\fs22 quoted
\f1\fs24 <!$Scr_Cs::1>
\f0\fs26  type to be synthesized, instead of being constructed manually.}