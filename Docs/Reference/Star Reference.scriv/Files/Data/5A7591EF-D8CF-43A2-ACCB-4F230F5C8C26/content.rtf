{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 \
\
\\begin\{itemize\}\
\\item One <<TypeExpression>> subsumes another if they have the same arity, and if their type constructors and type arguments pairwise subsume:\
\\begin\{prooftree\}\
\\AxiomC\{\\entail\{E,\\theta\\sub0\}\{t\\sub1\\subsume u\\sub1\\leadsto\\theta\\sub1\}\\sequence\{\\ \}\\entail\{E,\\theta\\sub\{n-1\}\}\{t\\subn\\subsume u\\subn\\leadsto\\theta\\subn\}\}\
\\AxiomC\{\\entail\{E,\\theta\\subn\}\{C\\sub1\\subsume C\\sub2\\leadsto\\theta\}\}\
\\BinaryInfC\{\\entail\{E,\\theta\\sub0\}\{C\\sub1\\ `of`\\ (t\\sub1\\sequence\{,\}t\\subn)\\ \\subsume\\ C\\sub2\\ `of`\\ (u\\sub1\\sequence\{,\}u\\subn)\\leadsto\\theta\}\}\
\\end\{prooftree\}\
where $t\\subi$ and $u\\subi$ are <<Type>> expressions  and $C\\sub1$ and $C\\sub2$ are <<TypeConstructor>>s.\
\
\\item If a type variable $v$ is already in the unifier then we look it up:\
\\begin\{prooftree\}\
\\AxiomC\{\\ensuremath\{v/t\\sub1\\in\\theta\\subi\}\}\
\\AxiomC\{\\entail\{E,\\theta\\subi\}\{t\\sub1\\subsume\{\}t\\sub2\\leadsto\\theta\\sub\{o\}\}\}\
\\BinaryInfC\{\\entail\{E,\\theta\\subi\}\{v\\subsume\{\}t\\sub2\\leadsto\\theta\\sub\{o\}\}\}\
\\end\{prooftree\}\
\
\\begin\{prooftree\}\
\\AxiomC\{\\ensuremath\{v/t\\sub2\\in\\theta\\subi\}\}\
\\AxiomC\{\\entail\{E,\\theta\\subi\}\{t\\sub1\\subsume\{\}t\\sub2\\leadsto\\theta\\sub\{o\}\}\}\
\\BinaryInfC\{\\entail\{E,\\theta\\subi\}\{t\\sub1\\subsume\{\}v\\leadsto\\theta\\sub\{o\}\}\}\
\\end\{prooftree\}\
\
\\item A type variable $v$ may be inserted into the unifier:\
\\begin\{prooftree\}\
\\AxiomC\{\\ensuremath\{v/t\\notin\\theta\\subi\}\}\
\\AxiomC\{\\ensuremath\{v\\notin\{\}t\\sub2\}\}\
\\BinaryInfC\{\\entail\{E,\\theta\}\{v\\subsume\{\}t\\sub2\\leadsto\\theta\\cup\\\{v/t\\sub2\\\}\}\}\
\\end\{prooftree\}\
where the condition \\ensuremath\{v\\notin\{\}t\} means that $v$ does not occur free in type $t$.\
\\begin\{prooftree\}\
\\AxiomC\{\\ensuremath\{v/t\\notin\\theta\\subi\}\}\
\\AxiomC\{\\ensuremath\{v\\notin\{\}t\\sub1\}\}\
\\BinaryInfC\{\\entail\{E,\\theta\}\{t\\sub1\\subsume\{\}v\\leadsto\\theta\\cup\\\{v/t\\sub1\\\}\}\}\
\\end\{prooftree\}\
\
\\end\{itemize\}\
\
====}