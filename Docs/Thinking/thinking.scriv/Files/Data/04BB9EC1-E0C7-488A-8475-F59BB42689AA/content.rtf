{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fnil\fcharset0 Georgia;\f2\fswiss\fcharset0 Helvetica;
\f3\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 Star's core grammar is more of a meta-grammar than a conventional grammar. It is known as an operator precedence grammar. This is very similar to the approach taken in Prolog and similar languages.\
A programmer can introduce new operators into the language, including new graphic tokens. For example:
\f1\fs24 \cf2 \expnd0\expndtw0\kerning0
\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f2 \cf2 <$Scr_Ps::0>
\f3 #infix(">\\\\",999)
\f1 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f2 \cf0 \kerning1\expnd0\expndtw0 <!$Scr_Ps::0>
\f0\fs26 defines a new infix operator 
\f2\fs24 <$Scr_Cs::1>
\f3\fs22 >\\
\f2\fs24 <!$Scr_Cs::1>
\f0\fs26  that was previously unknown to the Star compiler.\
We can also define multi-word tokens. This capability can be useful when grammar suggests multiple worded keywords. Some of Star's keywords are defined as multi-word operators; for example, the 
\f2\fs24 <$Scr_Cs::1>
\f3\fs22 group by
\f2\fs24 <!$Scr_Cs::1>
\f0\fs26  operator is defined by the declaration:
\f1\fs24 \cf2 \expnd0\expndtw0\kerning0
\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f2 \cf2 <$Scr_Ps::0>
\f3 #infix(\'93group by\'93,1005)
\f1 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f2 \cf0 \kerning1\expnd0\expndtw0 <!$Scr_Ps::0>
\f0\fs26 The meta-grammar allows arbitrary spaces and comments between the words of such an operator \'97 but no other text.}