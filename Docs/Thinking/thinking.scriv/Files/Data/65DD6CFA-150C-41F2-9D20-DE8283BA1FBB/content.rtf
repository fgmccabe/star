{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 Star has been used for a number of applications. One of these \'96 an application to schedule the processing of wafers in a semiconductor factory (a.k.a. fab) \'96 illustrates how the different features of Star come together in a whole.\
One of the first applications of the emerging Starview Enterprise Platform was ALPS (\'91Advanced Logistics and Planning System\'92), a system for scheduling semiconductor fabs.\
Semiconductor fabrication is a complex process, with modern microprocessors going through (on the order of) 1000 production steps going on over several weeks.\
There is often significant competitive pressure to use leading edge technology. The result is that equipment is fickle and breaks down or fails to operate at specification frequently.\
Moreover, many fabs are moving to highly diversified product mixes. It is not 10 times harder to make 100 products instead of 10, it is 1000\'92s of times harder.\
Consequently, long-term planning of the fab operation is impossible, and scheduling systems need to strike a delicate balance between the planning required to make good decisions and simultaneously not relying on the fab actually executing the plans generated.\
The problem is further exacerbated by problems quite specific to semiconductors: for example, some production routes \'96 the sequences of production steps involved in making a product \'96 involve queue-time zones. A queue-time zone is a sub-sequence that, once entered, has to be completed within a certain time. If a wafer does not complete a queue-time zone on time, chemical processes cause it to \'91go bad\'92 resulting in a reworking of some of the process at best and a scrapping of work at worst.\
The latest iteration of the ALPS system \'91ALPS 4\'92 makes use of almost all of Star's advanced facilities:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl264\slmult1\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}ALPS uses Star's advanced type system to provide high-level compositional models of conceptual entities such as tools, wafers, and routes.\
{\listtext	\uc0\u8226 	}Parametric polymorphism is used extensively to abstract over type definitions for concrete equipment, wafers, production recipes etc., making ALPS into a modular framework.\
{\listtext	\uc0\u8226 	}The framework is purely functional, which enables the composition and nesting of the fab (as well as simulated fabs) with schedulers. Star enables purely functional programming with its support for higher-order programming, and through providing high-performance functional data structures for dictionaries and sequences.\
{\listtext	\uc0\u8226 	}Advanced concepts from functional programming enable the modular composition of scheduling strategies: ALPS uses monads{\field{\*\fldinst{HYPERLINK "applewebdata://068486E1-468E-438B-BE0B-E2F020654FA9/Text/footnotes.xhtml#fn17"}}{\fldrslt 17}} to manage the \'91hope\'92 that the fab will follow its scheduling instructions, and arrows{\field{\*\fldinst{HYPERLINK "applewebdata://068486E1-468E-438B-BE0B-E2F020654FA9/Text/footnotes.xhtml#fn18"}}{\fldrslt 18}} to allow modular composition of scheduling strategies. Star provides general support for both through type contracts and computation expressions.\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0
\cf0 In particular, ALPS solves the queue-time problem through the combination of its purely functional operation and the composable scheduler framework.\
Whenever ALPS encounters a wafer about to enter a queue-time zone, it starts a recursive speculative simulation of the system, and monitors the wafer to see if it would successfully completes the queue-time zone. Depending on the result, it lets the wafer enter or delays it.\
Full speculative simulation is impossible with traditional scheduling systems used in the industry. A typical system operates on a live, multi-gigabyte database containing the fab state. Thus speculative simulation would entail copying the database state or snapshotting over longer sequences of transactions, each of which would be prohibitively expensive.\
In the following sections we elaborate on three selected aspects of the ALPS system to show how Star supports the development of complex applications:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl264\slmult1\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	\uc0\u8226 	}purely functional programming to enable speculative simulation;\
{\listtext	\uc0\u8226 	}algebraic data types to implement compositional models for routes;\
{\listtext	\uc0\u8226 	}monads to manage scheduler expectations about the fab.\
}