{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 Star is a full-featured language. It is an intentionally rich language. In addition to the features described here are concurrency features, data abstraction features that include the concept of existentially quantified types \'96 that enables abstract data types \'96 and computation expressions \'96 that are important when designing systems that rely on being able to delay and control how expressions are evaluated; and many more.\
In the chapters that follow, we will focus on three major features of Star that define much of the essence of Star: actors, contracts and the features needed to extend the syntax and capabilities of Star.}