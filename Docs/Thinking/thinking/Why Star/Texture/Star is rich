Star is a full-featured language. It is an intentionally rich language. In addition to the features described here are concurrency features, data abstraction features that include the concept of existentially quantified types – that enables abstract data types – and computation expressions – that are important when designing systems that rely on being able to delay and control how expressions are evaluated; and many more.
In the chapters that follow, we will focus on three major features of Star that define much of the essence of Star: actors, contracts and the features needed to extend the syntax and capabilities of Star.