/* Automatically generated, do not edit */

:-module(escapes,[isEscape/2,escapeType/2]).

escapeType("_exit",funType(tplType([type("star.core*integer")]),tplType([]))).
escapeType("_abort",allType(kVar("a"),funType(tplType([kVar("a"),type("star.core*string")]),tplType([])))).
escapeType("_definedLbl",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_callLbl",funType(tplType([type("star.core*string"),type("star.core*integer"),tpExp(tpFun("star.core*cons",1),tpExp(tpFun("star.core*cons",1),type("star.core*string")))]),tplType([]))).
escapeType("_int_plus",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_minus",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_times",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_div",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_mod",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_hash",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_gcd",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_flt_plus",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_flt_minus",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_flt_times",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_flt_div",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_flt_mod",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_int_abs",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_flt_abs",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("_int_eq",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_int_lt",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_int_ge",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_flt_eq",funType(tplType([type("star.core*float"),type("star.core*float"),type("star.core*float")]),type("star.core*boolean"))).
escapeType("_flt_lt",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*boolean"))).
escapeType("_flt_ge",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*boolean"))).
escapeType("_int2flt",funType(tplType([type("star.core*integer")]),type("star.core*float"))).
escapeType("_flt2int",funType(tplType([type("star.core*float")]),type("star.core*integer"))).
escapeType("_bits_float",funType(tplType([type("star.core*integer")]),type("star.core*float"))).
escapeType("_float_bits",funType(tplType([type("star.core*float")]),type("star.core*integer"))).
escapeType("_flt_hash",funType(tplType([type("star.core*float")]),type("star.core*integer"))).
escapeType("_flt_pwr",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_big_plus",funType(tplType([type("star.core*bigint"),type("star.core*bigint")]),type("star.core*bigint"))).
escapeType("_big_minus",funType(tplType([type("star.core*bigint"),type("star.core*bigint")]),type("star.core*bigint"))).
escapeType("_big_times",funType(tplType([type("star.core*bigint"),type("star.core*bigint")]),type("star.core*bigint"))).
escapeType("_big_div",funType(tplType([type("star.core*bigint"),type("star.core*bigint")]),tplType([type("star.core*bigint"),type("star.core*bigint")]))).
escapeType("_big_gcd",funType(tplType([type("star.core*bigint"),type("star.core*bigint")]),type("star.core*bigint"))).
escapeType("_big_hash",funType(tplType([type("star.core*bigint")]),type("star.core*integer"))).
escapeType("_big_eq",funType(tplType([type("star.core*bigint"),type("star.core*bigint")]),type("star.core*boolean"))).
escapeType("_big_lt",funType(tplType([type("star.core*bigint"),type("star.core*bigint")]),type("star.core*boolean"))).
escapeType("_big_ge",funType(tplType([type("star.core*bigint"),type("star.core*bigint")]),type("star.core*boolean"))).
escapeType("_int2big",funType(tplType([type("star.core*integer")]),type("star.core*bigint"))).
escapeType("_big2int",funType(tplType([type("star.core*bigint")]),tpExp(tpFun("star.core*option",1),type("star.core*integer")))).
escapeType("_ints2big",funType(tplType([tpExp(tpFun("star.core*cons",1),type("star.core*integer"))]),type("star.core*bigint"))).
escapeType("_big2ints",funType(tplType([type("star.core*bigint")]),tpExp(tpFun("star.core*cons",1),type("star.core*integer")))).
escapeType("_str2big",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*option",1),type("star.core*bigint")))).
escapeType("_big2str",funType(tplType([type("star.core*bigint")]),type("star.core*string"))).
escapeType("_big_format",funType(tplType([type("star.core*bigint"),type("star.core*string")]),type("star.core*string"))).
escapeType("_fiber_eq",allType(kVar("s"),allType(kVar("r"),funType(tplType([tpExp(tpExp(tpFun("star.fiber*fiber",2),kVar("s")),kVar("r")),tpExp(tpExp(tpFun("star.fiber*fiber",2),kVar("s")),kVar("r"))]),type("star.core*boolean"))))).
escapeType("_new_fiber",allType(kVar("s"),allType(kVar("r"),funType(tplType([funType(tplType([tpExp(tpExp(tpFun("star.fiber*fiber",2),kVar("r")),kVar("s")),kVar("r")]),kVar("s"))]),tpExp(tpExp(tpFun("star.fiber*fiber",2),kVar("r")),kVar("s")))))).
escapeType("_spawn",allType(kVar("s"),allType(kVar("r"),funType(tplType([funType(tplType([tpExp(tpExp(tpFun("star.fiber*fiber",2),kVar("r")),kVar("s"))]),kVar("s"))]),kVar("s"))))).
escapeType("_suspend_fiber",allType(kVar("s"),allType(kVar("r"),funType(tplType([tpExp(tpExp(tpFun("star.fiber*fiber",2),kVar("r")),kVar("s")),kVar("s")]),kVar("r"))))).
escapeType("_retire_fiber",allType(kVar("s"),allType(kVar("r"),funType(tplType([tpExp(tpExp(tpFun("star.fiber*fiber",2),kVar("r")),kVar("s")),kVar("s")]),tplType([]))))).
escapeType("_resume_fiber",allType(kVar("s"),allType(kVar("r"),funType(tplType([tpExp(tpExp(tpFun("star.fiber*fiber",2),kVar("r")),kVar("s")),kVar("r")]),kVar("s"))))).
escapeType("sqrt",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("exp",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("log",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("log10",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("pi",funType(tplType([]),type("star.core*float"))).
escapeType("sin",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("cos",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("tan",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("asin",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("acos",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("atan",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("trunc",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("floor",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("ceil",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("integral",funType(tplType([type("star.core*float")]),type("star.core*boolean"))).
escapeType("_irand",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_random",funType(tplType([]),type("star.core*float"))).
escapeType("_seed",funType(tplType([type("star.core*integer")]),tplType([]))).
escapeType("_ldexp",funType(tplType([type("star.core*float"),type("star.core*integer")]),type("star.core*float"))).
escapeType("_frexp",funType(tplType([type("star.core*float")]),tplType([type("star.core*float"),type("star.core*integer")]))).
escapeType("_modf",funType(tplType([type("star.core*float")]),tplType([type("star.core*float"),type("star.core*integer")]))).
escapeType("_band",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_bor",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_bxor",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_blsl",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_blsr",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_basr",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_bnot",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_cell",allType(kVar("t"),funType(tplType([kVar("t")]),refType(kVar("t"))))).
escapeType("_get",allType(kVar("t"),funType(tplType([refType(kVar("t"))]),kVar("t")))).
escapeType("_assign",allType(kVar("t"),funType(tplType([refType(kVar("t")),kVar("t")]),tplType([])))).
escapeType("_overwrite",allType(kVar("t"),funType(tplType([kVar("t"),kVar("t")]),kVar("t")))).
escapeType("_tuple_nth",allType(kVar("t"),allType(kVar("e"),funType(tplType([kVar("t"),type("star.core*integer")]),kVar("e"))))).
escapeType("_tuple_set_nth",allType(kVar("t"),allType(kVar("e"),funType(tplType([kVar("t"),type("star.core*integer"),kVar("e")]),kVar("t"))))).
escapeType("_cwd",funType(tplType([]),type("star.core*string"))).
escapeType("_cd",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_rm",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_mv",funType(tplType([type("star.core*string"),type("star.core*string")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_mkdir",funType(tplType([type("star.core*string"),type("star.core*integer")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_rmdir",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_isdir",funType(tplType([type("star.core*string")]),type("star.core*boolean"))).
escapeType("_file_chmod",funType(tplType([type("star.core*string"),type("star.core*integer")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_ls",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*cons",1),type("star.core*string")))).
escapeType("_repo",funType(tplType([]),type("star.core*string"))).
escapeType("_file_mode",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_file_present",funType(tplType([type("star.core*string")]),type("star.core*boolean"))).
escapeType("_file_type",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_file_size",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_file_modified",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_file_date",funType(tplType([type("star.core*string")]),tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer")]))).
escapeType("_openInFile",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_openOutFile",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_openAppendFile",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_openAppendIOFile",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_popen",funType(tplType([type("star.core*string"),tpExp(tpFun("star.core*cons",1),type("star.core*string")),tpExp(tpFun("star.core*cons",1),tplType([type("star.core*string"),type("star.core*string")]))]),tplType([type("star.file*fileHandle"),type("star.file*fileHandle"),type("star.file*fileHandle")]))).
escapeType("_close",funType(tplType([type("star.file*fileHandle")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_end_of_file",funType(tplType([type("star.file*fileHandle")]),type("star.core*boolean"))).
escapeType("_ready_to_read",funType(tplType([type("star.file*fileHandle")]),type("star.core*boolean"))).
escapeType("_ready_to_write",funType(tplType([type("star.file*fileHandle")]),type("star.core*boolean"))).
escapeType("_inchars",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),type("star.core*string"))).
escapeType("_inchar",funType(tplType([type("star.file*fileHandle")]),type("star.core*integer"))).
escapeType("_inbyte",funType(tplType([type("star.file*fileHandle")]),type("star.core*integer"))).
escapeType("_inline",funType(tplType([type("star.file*fileHandle")]),type("star.core*string"))).
escapeType("_inline_async",funType(tplType([type("star.file*fileHandle")]),tpExp(tpFun("star.core*future",1),type("star.core*string")))).
escapeType("_intext",funType(tplType([type("star.file*fileHandle"),type("star.core*string")]),type("star.core*string"))).
escapeType("_outchar",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_outbyte",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_outbytes",funType(tplType([type("star.file*fileHandle"),tpExp(tpFun("star.core*cons",1),type("star.core*integer"))]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_outtext",funType(tplType([type("star.file*fileHandle"),type("star.core*string")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_stdfile",funType(tplType([type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_fposition",funType(tplType([type("star.file*fileHandle")]),type("star.core*integer"))).
escapeType("_fseek",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_flush",funType(tplType([type("star.file*fileHandle")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_flushall",funType(tplType([]),tplType([]))).
escapeType("_setfileencoding",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_get_file",funType(tplType([type("star.core*string")]),type("star.core*string"))).
escapeType("_put_file",funType(tplType([type("star.core*string"),type("star.core*string")]),tplType([]))).
escapeType("_show",funType(tplType([type("star.core*string")]),tplType([]))).
escapeType("_install_pkg",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*cons",1),tplType([type("star.core*string"),type("star.core*string")])))).
escapeType("_pkg_is_present",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_in_manifest",funType(tplType([type("star.core*string"),type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_locate_in_manifest",funType(tplType([type("star.core*string"),type("star.core*string"),type("star.core*string")]),type("star.core*string"))).
escapeType("_logmsg",funType(tplType([type("star.core*string")]),tplType([]))).
escapeType("_connect",funType(tplType([type("star.core*string"),type("star.core*integer"),type("star.core*integer")]),tplType([type("star.file*fileHandle"),type("star.file*fileHandle")]))).
escapeType("_listen",funType(tplType([type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_accept",funType(tplType([type("star.file*fileHandle")]),tplType([type("star.file*fileHandle"),type("star.file*fileHandle"),type("star.core*string"),type("star.core*integer"),type("star.core*string")]))).
escapeType("_hosttoip",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*cons",1),type("star.core*string")))).
escapeType("_iptohost",funType(tplType([type("star.core*string")]),type("star.core*string"))).
escapeType("_delay",funType(tplType([type("star.core*float")]),tplType([]))).
escapeType("_sleep",funType(tplType([type("star.core*float")]),tplType([]))).
escapeType("_now",funType(tplType([]),type("star.core*float"))).
escapeType("_today",funType(tplType([]),type("star.core*float"))).
escapeType("_ticks",funType(tplType([]),type("star.core*integer"))).
escapeType("_time2date",funType(tplType([type("star.core*float")]),tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*float"),type("star.core*integer"),type("star.core*integer")]))).
escapeType("_time2utc",funType(tplType([type("star.core*float")]),tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*float"),type("star.core*integer"),type("star.core*integer")]))).
escapeType("_date2time",funType(tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*float"),type("star.core*integer")]),type("star.core*float"))).
escapeType("_utc2time",funType(tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*float"),type("star.core*integer")]),type("star.core*float"))).
escapeType("_uniCodeCategory",funType(tplType([type("star.core*char")]),type("star.core*integer"))).
escapeType("_isCcChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isCfChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isCnChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isCoChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isCsChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isLlChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isLmChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isLoChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isLtChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isLuChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isMcChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isMeChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isMnChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isNdChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isNlChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isNoChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isPcChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isPdChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isPeChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isPfChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isPiChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isPoChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isPsChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isScChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isSkChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isSmChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isSoChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isZlChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isZpChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isZsChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isLetterChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_digitCode",funType(tplType([type("star.core*char")]),type("star.core*integer"))).
escapeType("_codePoint",funType(tplType([type("star.core*char")]),type("star.core*integer"))).
escapeType("_char",funType(tplType([type("star.core*integer")]),type("star.core*char"))).
escapeType("_isIDStart",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isIDContinue",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_int2str",funType(tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer")]),type("star.core*string"))).
escapeType("_flt2str",funType(tplType([type("star.core*float"),type("star.core*integer"),type("star.core*char"),type("star.core*boolean")]),type("star.core*string"))).
escapeType("_int_format",funType(tplType([type("star.core*integer"),type("star.core*string")]),type("star.core*string"))).
escapeType("_flt_format",funType(tplType([type("star.core*float"),type("star.core*string")]),type("star.core*string"))).
escapeType("_str2flt",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*option",1),type("star.core*float")))).
escapeType("_str2int",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*option",1),type("star.core*integer")))).
escapeType("_chr_eq",funType(tplType([type("star.core*char"),type("star.core*char")]),type("star.core*boolean"))).
escapeType("_chr_lt",funType(tplType([type("star.core*char"),type("star.core*char")]),type("star.core*boolean"))).
escapeType("_chr_ge",funType(tplType([type("star.core*char"),type("star.core*char")]),type("star.core*boolean"))).
escapeType("_chr_hash",funType(tplType([type("star.core*char")]),type("star.core*integer"))).
escapeType("_chr_quote",funType(tplType([type("star.core*char")]),type("star.core*string"))).
escapeType("_chr_format",funType(tplType([type("star.core*char"),type("star.core*string")]),type("star.core*string"))).
escapeType("_str_eq",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_str_lt",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_str_ge",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_str_hash",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_str_len",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_str_gen",funType(tplType([type("star.core*string")]),type("star.core*string"))).
escapeType("_stringOf",allType(kVar("t"),funType(tplType([kVar("t"),type("star.core*integer")]),type("star.core*string")))).
escapeType("_explode",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*cons",1),type("star.core*char")))).
escapeType("_implode",funType(tplType([tpExp(tpFun("star.core*cons",1),type("star.core*char"))]),type("star.core*string"))).
escapeType("_str_find",funType(tplType([type("star.core*string"),type("star.core*string"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_sub_str",funType(tplType([type("star.core*string"),type("star.core*integer"),type("star.core*integer")]),type("star.core*string"))).
escapeType("_str_split",funType(tplType([type("star.core*string"),type("star.core*integer")]),tplType([type("star.core*string"),type("star.core*string")]))).
escapeType("_str_concat",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*string"))).
escapeType("_str_reverse",funType(tplType([type("star.core*string")]),type("star.core*string"))).
escapeType("_str_start",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_str_splice",funType(tplType([type("star.core*string"),type("star.core*integer"),type("star.core*integer"),type("star.core*string")]),type("star.core*string"))).
escapeType("_str_multicat",funType(tplType([tpExp(tpFun("star.core*cons",1),type("star.core*string"))]),type("star.core*string"))).
escapeType("_str_hdtl",funType(tplType([type("star.core*string")]),tplType([type("star.core*char"),type("star.core*string")]))).
escapeType("_str_back",funType(tplType([type("star.core*string")]),tplType([type("star.core*string"),type("star.core*char")]))).
escapeType("_str_cons",funType(tplType([type("star.core*char"),type("star.core*string")]),type("star.core*string"))).
escapeType("_code2str",funType(tplType([type("star.core*char")]),type("star.core*string"))).
escapeType("_str_apnd",funType(tplType([type("star.core*string"),type("star.core*char")]),type("star.core*string"))).
escapeType("_str_quote",funType(tplType([type("star.core*string")]),type("star.core*string"))).
escapeType("_str_format",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*string"))).
escapeType("_getenv",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*string"))).
escapeType("_setenv",funType(tplType([type("star.core*string"),type("star.core*string")]),tplType([]))).
escapeType("_envir",funType(tplType([]),tpExp(tpFun("star.core*cons",1),tplType([type("star.core*string"),type("star.core*string")])))).
escapeType("_getlogin",funType(tplType([]),type("star.core*string"))).
escapeType("_fork",funType(tplType([funType(tplType([]),tpExp(tpFun("star.core*result",2),type("star.core*string"))),tplType([])]),type("star.thread*thread"))).
escapeType("_thread",funType(tplType([]),type("star.thread*thread"))).
escapeType("_kill",funType(tplType([type("star.thread*thread")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_thread_state",funType(tplType([type("star.thread*thread")]),type("star.thread*threadState"))).
escapeType("_waitfor",funType(tplType([type("star.thread*thread")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_shell",funType(tplType([type("star.core*string"),tpExp(tpFun("star.core*cons",1),type("star.core*string")),tpExp(tpFun("star.core*cons",1),tplType([type("star.core*string"),type("star.core*string")]))]),type("star.core*integer"))).
escapeType("_newLock",funType(tplType([]),type("star.thread*lock"))).
escapeType("_acquireLock",funType(tplType([type("star.thread*lock"),type("star.core*float")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_waitLock",funType(tplType([type("star.thread*lock"),type("star.core*float")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_releaseLock",funType(tplType([type("star.thread*lock")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_ins_debug",funType(tplType([]),tplType([]))).
escapeType("_stackTrace",funType(tplType([]),type("star.core*string"))).
isEscape("_exit",0).
isEscape("_abort",1).
isEscape("_definedLbl",2).
isEscape("_callLbl",3).
isEscape("_int_plus",4).
isEscape("_int_minus",5).
isEscape("_int_times",6).
isEscape("_int_div",7).
isEscape("_int_mod",8).
isEscape("_int_hash",9).
isEscape("_int_gcd",10).
isEscape("_flt_plus",11).
isEscape("_flt_minus",12).
isEscape("_flt_times",13).
isEscape("_flt_div",14).
isEscape("_flt_mod",15).
isEscape("_int_abs",16).
isEscape("_flt_abs",17).
isEscape("_int_eq",18).
isEscape("_int_lt",19).
isEscape("_int_ge",20).
isEscape("_flt_eq",21).
isEscape("_flt_lt",22).
isEscape("_flt_ge",23).
isEscape("_int2flt",24).
isEscape("_flt2int",25).
isEscape("_bits_float",26).
isEscape("_float_bits",27).
isEscape("_flt_hash",28).
isEscape("_flt_pwr",29).
isEscape("_big_plus",30).
isEscape("_big_minus",31).
isEscape("_big_times",32).
isEscape("_big_div",33).
isEscape("_big_gcd",34).
isEscape("_big_hash",35).
isEscape("_big_eq",36).
isEscape("_big_lt",37).
isEscape("_big_ge",38).
isEscape("_int2big",39).
isEscape("_big2int",40).
isEscape("_ints2big",41).
isEscape("_big2ints",42).
isEscape("_str2big",43).
isEscape("_big2str",44).
isEscape("_big_format",45).
isEscape("_fiber_eq",46).
isEscape("_new_fiber",47).
isEscape("_spawn",48).
isEscape("_suspend_fiber",49).
isEscape("_retire_fiber",50).
isEscape("_resume_fiber",51).
isEscape("sqrt",52).
isEscape("exp",53).
isEscape("log",54).
isEscape("log10",55).
isEscape("pi",56).
isEscape("sin",57).
isEscape("cos",58).
isEscape("tan",59).
isEscape("asin",60).
isEscape("acos",61).
isEscape("atan",62).
isEscape("trunc",63).
isEscape("floor",64).
isEscape("ceil",65).
isEscape("integral",66).
isEscape("_irand",67).
isEscape("_random",68).
isEscape("_seed",69).
isEscape("_ldexp",70).
isEscape("_frexp",71).
isEscape("_modf",72).
isEscape("_band",73).
isEscape("_bor",74).
isEscape("_bxor",75).
isEscape("_blsl",76).
isEscape("_blsr",77).
isEscape("_basr",78).
isEscape("_bnot",79).
isEscape("_cell",80).
isEscape("_get",81).
isEscape("_assign",82).
isEscape("_overwrite",83).
isEscape("_tuple_nth",84).
isEscape("_tuple_set_nth",85).
isEscape("_cwd",86).
isEscape("_cd",87).
isEscape("_rm",88).
isEscape("_mv",89).
isEscape("_mkdir",90).
isEscape("_rmdir",91).
isEscape("_isdir",92).
isEscape("_file_chmod",93).
isEscape("_ls",94).
isEscape("_repo",95).
isEscape("_file_mode",96).
isEscape("_file_present",97).
isEscape("_file_type",98).
isEscape("_file_size",99).
isEscape("_file_modified",100).
isEscape("_file_date",101).
isEscape("_openInFile",102).
isEscape("_openOutFile",103).
isEscape("_openAppendFile",104).
isEscape("_openAppendIOFile",105).
isEscape("_popen",106).
isEscape("_close",107).
isEscape("_end_of_file",108).
isEscape("_ready_to_read",109).
isEscape("_ready_to_write",110).
isEscape("_inchars",111).
isEscape("_inchar",112).
isEscape("_inbyte",113).
isEscape("_inline",114).
isEscape("_inline_async",115).
isEscape("_intext",116).
isEscape("_outchar",117).
isEscape("_outbyte",118).
isEscape("_outbytes",119).
isEscape("_outtext",120).
isEscape("_stdfile",121).
isEscape("_fposition",122).
isEscape("_fseek",123).
isEscape("_flush",124).
isEscape("_flushall",125).
isEscape("_setfileencoding",126).
isEscape("_get_file",127).
isEscape("_put_file",128).
isEscape("_show",129).
isEscape("_install_pkg",130).
isEscape("_pkg_is_present",131).
isEscape("_in_manifest",132).
isEscape("_locate_in_manifest",133).
isEscape("_logmsg",134).
isEscape("_connect",135).
isEscape("_listen",136).
isEscape("_accept",137).
isEscape("_hosttoip",138).
isEscape("_iptohost",139).
isEscape("_delay",140).
isEscape("_sleep",141).
isEscape("_now",142).
isEscape("_today",143).
isEscape("_ticks",144).
isEscape("_time2date",145).
isEscape("_time2utc",146).
isEscape("_date2time",147).
isEscape("_utc2time",148).
isEscape("_uniCodeCategory",149).
isEscape("_isCcChar",150).
isEscape("_isCfChar",151).
isEscape("_isCnChar",152).
isEscape("_isCoChar",153).
isEscape("_isCsChar",154).
isEscape("_isLlChar",155).
isEscape("_isLmChar",156).
isEscape("_isLoChar",157).
isEscape("_isLtChar",158).
isEscape("_isLuChar",159).
isEscape("_isMcChar",160).
isEscape("_isMeChar",161).
isEscape("_isMnChar",162).
isEscape("_isNdChar",163).
isEscape("_isNlChar",164).
isEscape("_isNoChar",165).
isEscape("_isPcChar",166).
isEscape("_isPdChar",167).
isEscape("_isPeChar",168).
isEscape("_isPfChar",169).
isEscape("_isPiChar",170).
isEscape("_isPoChar",171).
isEscape("_isPsChar",172).
isEscape("_isScChar",173).
isEscape("_isSkChar",174).
isEscape("_isSmChar",175).
isEscape("_isSoChar",176).
isEscape("_isZlChar",177).
isEscape("_isZpChar",178).
isEscape("_isZsChar",179).
isEscape("_isLetterChar",180).
isEscape("_digitCode",181).
isEscape("_codePoint",182).
isEscape("_char",183).
isEscape("_isIDStart",184).
isEscape("_isIDContinue",185).
isEscape("_int2str",186).
isEscape("_flt2str",187).
isEscape("_int_format",188).
isEscape("_flt_format",189).
isEscape("_str2flt",190).
isEscape("_str2int",191).
isEscape("_chr_eq",192).
isEscape("_chr_lt",193).
isEscape("_chr_ge",194).
isEscape("_chr_hash",195).
isEscape("_chr_quote",196).
isEscape("_chr_format",197).
isEscape("_str_eq",198).
isEscape("_str_lt",199).
isEscape("_str_ge",200).
isEscape("_str_hash",201).
isEscape("_str_len",202).
isEscape("_str_gen",203).
isEscape("_stringOf",204).
isEscape("_explode",205).
isEscape("_implode",206).
isEscape("_str_find",207).
isEscape("_sub_str",208).
isEscape("_str_split",209).
isEscape("_str_concat",210).
isEscape("_str_reverse",211).
isEscape("_str_start",212).
isEscape("_str_splice",213).
isEscape("_str_multicat",214).
isEscape("_str_hdtl",215).
isEscape("_str_back",216).
isEscape("_str_cons",217).
isEscape("_code2str",218).
isEscape("_str_apnd",219).
isEscape("_str_quote",220).
isEscape("_str_format",221).
isEscape("_getenv",222).
isEscape("_setenv",223).
isEscape("_envir",224).
isEscape("_getlogin",225).
isEscape("_fork",226).
isEscape("_thread",227).
isEscape("_kill",228).
isEscape("_thread_state",229).
isEscape("_waitfor",230).
isEscape("_shell",231).
isEscape("_newLock",232).
isEscape("_acquireLock",233).
isEscape("_waitLock",234).
isEscape("_releaseLock",235).
isEscape("_ins_debug",236).
isEscape("_stackTrace",237).
