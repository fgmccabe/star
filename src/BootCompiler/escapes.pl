/* Automatically generated, do not edit */

:-module(escapes,[isEscape/2,escapeType/2]).

escapeType("_exit",funType(tplType([type("star.core*integer")]),tplType([]))).
escapeType("_abort",allType(kVar("a"),funType(tplType([kVar("a"),type("star.core*string")]),tplType([])))).
escapeType("_definedLbl",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_callLbl",funType(tplType([type("star.core*string"),type("star.core*integer"),tpExp(tpFun("star.core*cons",1),tpExp(tpFun("star.core*cons",1),type("star.core*string")))]),tplType([]))).
escapeType("_fun2cont",allType(kVar("a"),allType(kVar("b"),funType(tplType([tpExp(tpExp(tpFun("tag",2),kVar("a")),kVar("b")),funType(tplType([kVar("a")]),kVar("b"))]),contType(tplType([kVar("a")]),kVar("b")))))).
escapeType("_int_plus",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_minus",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_times",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_div",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_mod",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_hash",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_flt_plus",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_flt_minus",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_flt_times",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_flt_div",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_flt_mod",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_int_abs",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_flt_abs",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("_int_eq",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_int_lt",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_int_ge",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_flt_eq",funType(tplType([type("star.core*float"),type("star.core*float"),type("star.core*float")]),type("star.core*boolean"))).
escapeType("_flt_lt",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*boolean"))).
escapeType("_flt_ge",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*boolean"))).
escapeType("_int2flt",funType(tplType([type("star.core*integer")]),type("star.core*float"))).
escapeType("_flt2int",funType(tplType([type("star.core*float")]),type("star.core*integer"))).
escapeType("_bits_float",funType(tplType([type("star.core*integer")]),type("star.core*float"))).
escapeType("_float_bits",funType(tplType([type("star.core*float")]),type("star.core*integer"))).
escapeType("_flt_hash",funType(tplType([type("star.core*float")]),type("star.core*integer"))).
escapeType("_flt_pwr",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("sqrt",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("exp",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("log",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("log10",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("pi",funType(tplType([]),type("star.core*float"))).
escapeType("sin",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("cos",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("tan",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("asin",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("acos",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("atan",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("trunc",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("floor",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("ceil",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("integral",funType(tplType([type("star.core*float")]),type("star.core*boolean"))).
escapeType("_irand",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_random",funType(tplType([]),type("star.core*float"))).
escapeType("_seed",funType(tplType([type("star.core*integer")]),tplType([]))).
escapeType("_ldexp",funType(tplType([type("star.core*float"),type("star.core*integer")]),type("star.core*float"))).
escapeType("_frexp",funType(tplType([type("star.core*float")]),tplType([type("star.core*float"),type("star.core*integer")]))).
escapeType("_modf",funType(tplType([type("star.core*float")]),tplType([type("star.core*float"),type("star.core*integer")]))).
escapeType("_band",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_bor",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_bxor",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_blsl",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_blsr",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_basr",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_bnot",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_cell",allType(kVar("t"),funType(tplType([kVar("t")]),refType(kVar("t"))))).
escapeType("_get",allType(kVar("t"),funType(tplType([refType(kVar("t"))]),kVar("t")))).
escapeType("_assign",allType(kVar("t"),funType(tplType([refType(kVar("t")),kVar("t")]),tplType([])))).
escapeType("_overwrite",allType(kVar("t"),funType(tplType([kVar("t"),kVar("t")]),kVar("t")))).
escapeType("_tuple_nth",allType(kVar("t"),allType(kVar("e"),funType(tplType([kVar("t"),type("star.core*integer")]),kVar("e"))))).
escapeType("_tuple_set_nth",allType(kVar("t"),allType(kVar("e"),funType(tplType([kVar("t"),type("star.core*integer"),kVar("e")]),kVar("t"))))).
escapeType("_cwd",funType(tplType([]),type("star.core*string"))).
escapeType("_cd",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_rm",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_mv",funType(tplType([type("star.core*string"),type("star.core*string")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_mkdir",funType(tplType([type("star.core*string"),type("star.core*integer")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_rmdir",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_isdir",funType(tplType([type("star.core*string")]),type("star.core*boolean"))).
escapeType("_file_chmod",funType(tplType([type("star.core*string"),type("star.core*integer")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_ls",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*cons",1),type("star.core*string")))).
escapeType("_repo",funType(tplType([]),type("star.core*string"))).
escapeType("_file_mode",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_file_present",funType(tplType([type("star.core*string")]),type("star.core*boolean"))).
escapeType("_file_type",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_file_size",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_file_modified",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_file_date",funType(tplType([type("star.core*string")]),tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer")]))).
escapeType("_openInFile",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_openOutFile",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_openAppendFile",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_openAppendIOFile",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_popen",funType(tplType([type("star.core*string"),tpExp(tpFun("star.core*cons",1),type("star.core*string")),tpExp(tpFun("star.core*cons",1),tplType([type("star.core*string"),type("star.core*string")]))]),tplType([type("star.file*fileHandle"),type("star.file*fileHandle"),type("star.file*fileHandle")]))).
escapeType("_close",funType(tplType([type("star.file*fileHandle")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_end_of_file",funType(tplType([type("star.file*fileHandle")]),type("star.core*boolean"))).
escapeType("_ready_to_read",funType(tplType([type("star.file*fileHandle")]),type("star.core*boolean"))).
escapeType("_ready_to_write",funType(tplType([type("star.file*fileHandle")]),type("star.core*boolean"))).
escapeType("_inchars",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),type("star.core*string"))).
escapeType("_inchar",funType(tplType([type("star.file*fileHandle")]),type("star.core*integer"))).
escapeType("_inbyte",funType(tplType([type("star.file*fileHandle")]),type("star.core*integer"))).
escapeType("_inline",funType(tplType([type("star.file*fileHandle")]),type("star.core*string"))).
escapeType("_intext",funType(tplType([type("star.file*fileHandle"),type("star.core*string")]),type("star.core*string"))).
escapeType("_outchar",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_outbyte",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_outbytes",funType(tplType([type("star.file*fileHandle"),tpExp(tpFun("star.core*cons",1),type("star.core*integer"))]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_outtext",funType(tplType([type("star.file*fileHandle"),type("star.core*string")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_stdfile",funType(tplType([type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_fposition",funType(tplType([type("star.file*fileHandle")]),type("star.core*integer"))).
escapeType("_fseek",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_flush",funType(tplType([type("star.file*fileHandle")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_flushall",funType(tplType([]),tplType([]))).
escapeType("_setfileencoding",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_get_file",funType(tplType([type("star.core*string")]),type("star.core*string"))).
escapeType("_put_file",funType(tplType([type("star.core*string"),type("star.core*string")]),tplType([]))).
escapeType("_show",funType(tplType([type("star.core*string")]),tplType([]))).
escapeType("_install_pkg",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*cons",1),tplType([type("star.core*string"),type("star.core*string")])))).
escapeType("_pkg_is_present",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_in_manifest",funType(tplType([type("star.core*string"),type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_locate_in_manifest",funType(tplType([type("star.core*string"),type("star.core*string"),type("star.core*string")]),type("star.core*string"))).
escapeType("_logmsg",funType(tplType([type("star.core*string")]),tplType([]))).
escapeType("_connect",funType(tplType([type("star.core*string"),type("star.core*integer"),type("star.core*integer")]),tplType([type("star.file*fileHandle"),type("star.file*fileHandle")]))).
escapeType("_listen",funType(tplType([type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_accept",funType(tplType([type("star.file*fileHandle")]),tplType([type("star.file*fileHandle"),type("star.file*fileHandle"),type("star.core*string"),type("star.core*integer"),type("star.core*string")]))).
escapeType("_hosttoip",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*cons",1),type("star.core*string")))).
escapeType("_iptohost",funType(tplType([type("star.core*string")]),type("star.core*string"))).
escapeType("_delay",funType(tplType([type("star.core*float")]),tplType([]))).
escapeType("_sleep",funType(tplType([type("star.core*float")]),tplType([]))).
escapeType("_now",funType(tplType([]),type("star.core*float"))).
escapeType("_today",funType(tplType([]),type("star.core*float"))).
escapeType("_ticks",funType(tplType([]),type("star.core*integer"))).
escapeType("_time2date",funType(tplType([type("star.core*float")]),tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*float"),type("star.core*integer"),type("star.core*integer")]))).
escapeType("_time2utc",funType(tplType([type("star.core*float")]),tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*float"),type("star.core*integer"),type("star.core*integer")]))).
escapeType("_date2time",funType(tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*float"),type("star.core*integer")]),type("star.core*float"))).
escapeType("_utc2time",funType(tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*float"),type("star.core*integer")]),type("star.core*float"))).
escapeType("_uniCodeCategory",funType(tplType([type("star.core*char")]),type("star.core*integer"))).
escapeType("_isCcChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isCfChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isCnChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isCoChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isCsChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isLlChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isLmChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isLoChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isLtChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isLuChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isMcChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isMeChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isMnChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isNdChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isNlChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isNoChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isPcChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isPdChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isPeChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isPfChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isPiChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isPoChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isPsChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isScChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isSkChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isSmChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isSoChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isZlChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isZpChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isZsChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isLetterChar",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_digitCode",funType(tplType([type("star.core*char")]),type("star.core*integer"))).
escapeType("_codePoint",funType(tplType([type("star.core*char")]),type("star.core*integer"))).
escapeType("_char",funType(tplType([type("star.core*integer")]),type("star.core*char"))).
escapeType("_isIDStart",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_isIDContinue",funType(tplType([type("star.core*char")]),type("star.core*boolean"))).
escapeType("_int2str",funType(tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer")]),type("star.core*string"))).
escapeType("_flt2str",funType(tplType([type("star.core*float"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*boolean")]),type("star.core*string"))).
escapeType("_int_format",funType(tplType([type("star.core*integer"),type("star.core*string")]),type("star.core*string"))).
escapeType("_flt_format",funType(tplType([type("star.core*float"),type("star.core*string")]),type("star.core*string"))).
escapeType("_str2flt",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*option",1),type("star.core*float")))).
escapeType("_str2int",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*option",1),type("star.core*integer")))).
escapeType("_chr_eq",funType(tplType([type("star.core*char"),type("star.core*char")]),type("star.core*boolean"))).
escapeType("_chr_lt",funType(tplType([type("star.core*char"),type("star.core*char")]),type("star.core*boolean"))).
escapeType("_chr_ge",funType(tplType([type("star.core*char"),type("star.core*char")]),type("star.core*boolean"))).
escapeType("_chr_hash",funType(tplType([type("star.core*char")]),type("star.core*integer"))).
escapeType("_chr_quote",funType(tplType([type("star.core*char")]),type("star.core*string"))).
escapeType("_chr_format",funType(tplType([type("star.core*char"),type("star.core*string")]),type("star.core*string"))).
escapeType("_str_eq",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_str_lt",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_str_ge",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_str_hash",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_str_len",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_str_gen",funType(tplType([type("star.core*string")]),type("star.core*string"))).
escapeType("_stringOf",allType(kVar("t"),funType(tplType([kVar("t"),type("star.core*integer")]),type("star.core*string")))).
escapeType("_explode",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*cons",1),type("star.core*char")))).
escapeType("_implode",funType(tplType([tpExp(tpFun("star.core*cons",1),type("star.core*char"))]),type("star.core*string"))).
escapeType("_str_find",funType(tplType([type("star.core*string"),type("star.core*string"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_sub_str",funType(tplType([type("star.core*string"),type("star.core*integer"),type("star.core*integer")]),type("star.core*string"))).
escapeType("_str_split",funType(tplType([type("star.core*string"),type("star.core*integer")]),tplType([type("star.core*string"),type("star.core*string")]))).
escapeType("_str_concat",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*string"))).
escapeType("_str_reverse",funType(tplType([type("star.core*string")]),type("star.core*string"))).
escapeType("_str_start",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_str_splice",funType(tplType([type("star.core*string"),type("star.core*integer"),type("star.core*integer"),type("star.core*string")]),type("star.core*string"))).
escapeType("_str_multicat",funType(tplType([tpExp(tpFun("star.core*cons",1),type("star.core*string"))]),type("star.core*string"))).
escapeType("_str_hdtl",funType(tplType([type("star.core*string")]),tplType([type("star.core*char"),type("star.core*string")]))).
escapeType("_str_back",funType(tplType([type("star.core*string")]),tplType([type("star.core*string"),type("star.core*char")]))).
escapeType("_str_cons",funType(tplType([type("star.core*char"),type("star.core*string")]),type("star.core*string"))).
escapeType("_code2str",funType(tplType([type("star.core*char")]),type("star.core*string"))).
escapeType("_str_apnd",funType(tplType([type("star.core*string"),type("star.core*char")]),type("star.core*string"))).
escapeType("_str_quote",funType(tplType([type("star.core*string")]),type("star.core*string"))).
escapeType("_str_format",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*string"))).
escapeType("_getenv",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*string"))).
escapeType("_setenv",funType(tplType([type("star.core*string"),type("star.core*string")]),tplType([]))).
escapeType("_envir",funType(tplType([]),tpExp(tpFun("star.core*cons",1),tplType([type("star.core*string"),type("star.core*string")])))).
escapeType("_getlogin",funType(tplType([]),type("star.core*string"))).
escapeType("_fork",funType(tplType([funType(tplType([]),tpExp(tpFun("star.core*result",2),type("star.core*string"))),tplType([])]),type("star.thread*thread"))).
escapeType("_thread",funType(tplType([]),type("star.thread*thread"))).
escapeType("_kill",funType(tplType([type("star.thread*thread")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_thread_state",funType(tplType([type("star.thread*thread")]),type("star.thread*threadState"))).
escapeType("_waitfor",funType(tplType([type("star.thread*thread")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_shell",funType(tplType([type("star.core*string"),tpExp(tpFun("star.core*cons",1),type("star.core*string")),tpExp(tpFun("star.core*cons",1),tplType([type("star.core*string"),type("star.core*string")]))]),type("star.core*integer"))).
escapeType("_newLock",funType(tplType([]),type("star.thread*lock"))).
escapeType("_acquireLock",funType(tplType([type("star.thread*lock"),type("star.core*float")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_waitLock",funType(tplType([type("star.thread*lock"),type("star.core*float")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_releaseLock",funType(tplType([type("star.thread*lock")]),tpExp(tpFun("star.core*result",2),type("star.core*string")))).
escapeType("_ins_debug",funType(tplType([]),tplType([]))).
escapeType("_stackTrace",funType(tplType([]),type("star.core*string"))).
isEscape("_exit",0).
isEscape("_abort",1).
isEscape("_definedLbl",2).
isEscape("_callLbl",3).
isEscape("_fun2cont",4).
isEscape("_int_plus",5).
isEscape("_int_minus",6).
isEscape("_int_times",7).
isEscape("_int_div",8).
isEscape("_int_mod",9).
isEscape("_int_hash",10).
isEscape("_flt_plus",11).
isEscape("_flt_minus",12).
isEscape("_flt_times",13).
isEscape("_flt_div",14).
isEscape("_flt_mod",15).
isEscape("_int_abs",16).
isEscape("_flt_abs",17).
isEscape("_int_eq",18).
isEscape("_int_lt",19).
isEscape("_int_ge",20).
isEscape("_flt_eq",21).
isEscape("_flt_lt",22).
isEscape("_flt_ge",23).
isEscape("_int2flt",24).
isEscape("_flt2int",25).
isEscape("_bits_float",26).
isEscape("_float_bits",27).
isEscape("_flt_hash",28).
isEscape("_flt_pwr",29).
isEscape("sqrt",30).
isEscape("exp",31).
isEscape("log",32).
isEscape("log10",33).
isEscape("pi",34).
isEscape("sin",35).
isEscape("cos",36).
isEscape("tan",37).
isEscape("asin",38).
isEscape("acos",39).
isEscape("atan",40).
isEscape("trunc",41).
isEscape("floor",42).
isEscape("ceil",43).
isEscape("integral",44).
isEscape("_irand",45).
isEscape("_random",46).
isEscape("_seed",47).
isEscape("_ldexp",48).
isEscape("_frexp",49).
isEscape("_modf",50).
isEscape("_band",51).
isEscape("_bor",52).
isEscape("_bxor",53).
isEscape("_blsl",54).
isEscape("_blsr",55).
isEscape("_basr",56).
isEscape("_bnot",57).
isEscape("_cell",58).
isEscape("_get",59).
isEscape("_assign",60).
isEscape("_overwrite",61).
isEscape("_tuple_nth",62).
isEscape("_tuple_set_nth",63).
isEscape("_cwd",64).
isEscape("_cd",65).
isEscape("_rm",66).
isEscape("_mv",67).
isEscape("_mkdir",68).
isEscape("_rmdir",69).
isEscape("_isdir",70).
isEscape("_file_chmod",71).
isEscape("_ls",72).
isEscape("_repo",73).
isEscape("_file_mode",74).
isEscape("_file_present",75).
isEscape("_file_type",76).
isEscape("_file_size",77).
isEscape("_file_modified",78).
isEscape("_file_date",79).
isEscape("_openInFile",80).
isEscape("_openOutFile",81).
isEscape("_openAppendFile",82).
isEscape("_openAppendIOFile",83).
isEscape("_popen",84).
isEscape("_close",85).
isEscape("_end_of_file",86).
isEscape("_ready_to_read",87).
isEscape("_ready_to_write",88).
isEscape("_inchars",89).
isEscape("_inchar",90).
isEscape("_inbyte",91).
isEscape("_inline",92).
isEscape("_intext",93).
isEscape("_outchar",94).
isEscape("_outbyte",95).
isEscape("_outbytes",96).
isEscape("_outtext",97).
isEscape("_stdfile",98).
isEscape("_fposition",99).
isEscape("_fseek",100).
isEscape("_flush",101).
isEscape("_flushall",102).
isEscape("_setfileencoding",103).
isEscape("_get_file",104).
isEscape("_put_file",105).
isEscape("_show",106).
isEscape("_install_pkg",107).
isEscape("_pkg_is_present",108).
isEscape("_in_manifest",109).
isEscape("_locate_in_manifest",110).
isEscape("_logmsg",111).
isEscape("_connect",112).
isEscape("_listen",113).
isEscape("_accept",114).
isEscape("_hosttoip",115).
isEscape("_iptohost",116).
isEscape("_delay",117).
isEscape("_sleep",118).
isEscape("_now",119).
isEscape("_today",120).
isEscape("_ticks",121).
isEscape("_time2date",122).
isEscape("_time2utc",123).
isEscape("_date2time",124).
isEscape("_utc2time",125).
isEscape("_uniCodeCategory",126).
isEscape("_isCcChar",127).
isEscape("_isCfChar",128).
isEscape("_isCnChar",129).
isEscape("_isCoChar",130).
isEscape("_isCsChar",131).
isEscape("_isLlChar",132).
isEscape("_isLmChar",133).
isEscape("_isLoChar",134).
isEscape("_isLtChar",135).
isEscape("_isLuChar",136).
isEscape("_isMcChar",137).
isEscape("_isMeChar",138).
isEscape("_isMnChar",139).
isEscape("_isNdChar",140).
isEscape("_isNlChar",141).
isEscape("_isNoChar",142).
isEscape("_isPcChar",143).
isEscape("_isPdChar",144).
isEscape("_isPeChar",145).
isEscape("_isPfChar",146).
isEscape("_isPiChar",147).
isEscape("_isPoChar",148).
isEscape("_isPsChar",149).
isEscape("_isScChar",150).
isEscape("_isSkChar",151).
isEscape("_isSmChar",152).
isEscape("_isSoChar",153).
isEscape("_isZlChar",154).
isEscape("_isZpChar",155).
isEscape("_isZsChar",156).
isEscape("_isLetterChar",157).
isEscape("_digitCode",158).
isEscape("_codePoint",159).
isEscape("_char",160).
isEscape("_isIDStart",161).
isEscape("_isIDContinue",162).
isEscape("_int2str",163).
isEscape("_flt2str",164).
isEscape("_int_format",165).
isEscape("_flt_format",166).
isEscape("_str2flt",167).
isEscape("_str2int",168).
isEscape("_chr_eq",169).
isEscape("_chr_lt",170).
isEscape("_chr_ge",171).
isEscape("_chr_hash",172).
isEscape("_chr_quote",173).
isEscape("_chr_format",174).
isEscape("_str_eq",175).
isEscape("_str_lt",176).
isEscape("_str_ge",177).
isEscape("_str_hash",178).
isEscape("_str_len",179).
isEscape("_str_gen",180).
isEscape("_stringOf",181).
isEscape("_explode",182).
isEscape("_implode",183).
isEscape("_str_find",184).
isEscape("_sub_str",185).
isEscape("_str_split",186).
isEscape("_str_concat",187).
isEscape("_str_reverse",188).
isEscape("_str_start",189).
isEscape("_str_splice",190).
isEscape("_str_multicat",191).
isEscape("_str_hdtl",192).
isEscape("_str_back",193).
isEscape("_str_cons",194).
isEscape("_code2str",195).
isEscape("_str_apnd",196).
isEscape("_str_quote",197).
isEscape("_str_format",198).
isEscape("_getenv",199).
isEscape("_setenv",200).
isEscape("_envir",201).
isEscape("_getlogin",202).
isEscape("_fork",203).
isEscape("_thread",204).
isEscape("_kill",205).
isEscape("_thread_state",206).
isEscape("_waitfor",207).
isEscape("_shell",208).
isEscape("_newLock",209).
isEscape("_acquireLock",210).
isEscape("_waitLock",211).
isEscape("_releaseLock",212).
isEscape("_ins_debug",213).
isEscape("_stackTrace",214).
