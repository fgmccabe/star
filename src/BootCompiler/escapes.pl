/* Automatically generated, do not edit */

:-module(escapes,[isEscape/1,escapeType/2]).

escapeType("_exit",allType(kVar("e"),funType(tplType([type("integer")]),kVar("e")))).
escapeType("_abort",allType(kVar("a"),allType(kVar("e"),funType(tplType([kVar("a"),type("string")]),kVar("e"))))).
escapeType("_definedLbl",funType(tplType([type("string"),type("integer")]),type("boolean"))).
escapeType("_globalIsSet",funType(tplType([type("string")]),type("boolean"))).
escapeType("_int_plus",funType(tplType([type("integer"),type("integer")]),type("integer"))).
escapeType("_int_minus",funType(tplType([type("integer"),type("integer")]),type("integer"))).
escapeType("_int_times",funType(tplType([type("integer"),type("integer")]),type("integer"))).
escapeType("_int_div",funType(tplType([type("integer"),type("integer")]),type("integer"),type("errorCode"))).
escapeType("_int_mod",funType(tplType([type("integer"),type("integer")]),type("integer"),type("errorCode"))).
escapeType("_int_hash",funType(tplType([type("integer")]),type("integer"))).
escapeType("_int_gcd",funType(tplType([type("integer"),type("integer")]),type("integer"),type("errorCode"))).
escapeType("_int_lg2",funType(tplType([type("integer")]),type("integer"),type("errorCode"))).
escapeType("_flt_plus",funType(tplType([type("float"),type("float")]),type("float"))).
escapeType("_flt_minus",funType(tplType([type("float"),type("float")]),type("float"))).
escapeType("_flt_times",funType(tplType([type("float"),type("float")]),type("float"))).
escapeType("_flt_div",funType(tplType([type("float"),type("float")]),type("float"),type("errorCode"))).
escapeType("_flt_mod",funType(tplType([type("float"),type("float")]),type("float"),type("errorCode"))).
escapeType("_int_abs",funType(tplType([type("integer")]),type("integer"))).
escapeType("_flt_abs",funType(tplType([type("float")]),type("float"))).
escapeType("_int_eq",funType(tplType([type("integer"),type("integer")]),type("boolean"))).
escapeType("_int_lt",funType(tplType([type("integer"),type("integer")]),type("boolean"))).
escapeType("_int_ge",funType(tplType([type("integer"),type("integer")]),type("boolean"))).
escapeType("_int_pow",funType(tplType([type("integer"),type("integer")]),type("integer"),type("errorCode"))).
escapeType("_flt_eq",funType(tplType([type("float"),type("float")]),type("boolean"))).
escapeType("_flt_lt",funType(tplType([type("float"),type("float")]),type("boolean"))).
escapeType("_flt_ge",funType(tplType([type("float"),type("float")]),type("boolean"))).
escapeType("_int2flt",funType(tplType([type("integer")]),type("float"))).
escapeType("_flt2int",funType(tplType([type("float")]),type("integer"))).
escapeType("_bits_float",funType(tplType([type("integer")]),type("float"))).
escapeType("_float_bits",funType(tplType([type("float")]),type("integer"))).
escapeType("_flt_hash",funType(tplType([type("float")]),type("integer"))).
escapeType("_flt_pwr",funType(tplType([type("float"),type("float")]),type("float"))).
escapeType("_big_plus",funType(tplType([type("bigint"),type("bigint")]),type("bigint"))).
escapeType("_big_minus",funType(tplType([type("bigint"),type("bigint")]),type("bigint"))).
escapeType("_big_times",funType(tplType([type("bigint"),type("bigint")]),type("bigint"))).
escapeType("_big_div",funType(tplType([type("bigint"),type("bigint")]),tplType([type("bigint"),type("bigint")]),type("errorCode"))).
escapeType("_big_bitand",funType(tplType([type("bigint"),type("bigint")]),type("bigint"))).
escapeType("_big_bitor",funType(tplType([type("bigint"),type("bigint")]),type("bigint"))).
escapeType("_big_bitxor",funType(tplType([type("bigint"),type("bigint")]),type("bigint"))).
escapeType("_big_bitnot",funType(tplType([type("bigint")]),type("bigint"))).
escapeType("_big_gcd",funType(tplType([type("bigint"),type("bigint")]),type("bigint"),type("errorCode"))).
escapeType("_big_hash",funType(tplType([type("bigint")]),type("integer"))).
escapeType("_big_eq",funType(tplType([type("bigint"),type("bigint")]),type("boolean"))).
escapeType("_big_lt",funType(tplType([type("bigint"),type("bigint")]),type("boolean"))).
escapeType("_big_ge",funType(tplType([type("bigint"),type("bigint")]),type("boolean"))).
escapeType("_int2big",funType(tplType([type("integer")]),type("bigint"))).
escapeType("_big2int",funType(tplType([type("bigint")]),tpExp(tpFun("option",1),type("integer")))).
escapeType("_ints2big",funType(tplType([tpExp(tpFun("cons",1),type("integer"))]),type("bigint"))).
escapeType("_big2ints",funType(tplType([type("bigint")]),tpExp(tpFun("cons",1),type("integer")))).
escapeType("_str2big",funType(tplType([type("string")]),tpExp(tpFun("option",1),type("bigint")))).
escapeType("_big2str",funType(tplType([type("bigint")]),type("string"))).
escapeType("_big_format",funType(tplType([type("bigint"),type("string")]),type("string"),type("errorCode"))).
escapeType("_fiber_eq",allType(kVar("r"),allType(kVar("s"),funType(tplType([tpExp(tpExp(tpFun("fiber",2),kVar("r")),kVar("s")),tpExp(tpExp(tpFun("fiber",2),kVar("r")),kVar("s"))]),type("boolean"))))).
escapeType("_fiber",allType(kVar("r"),allType(kVar("s"),funType(tplType([funType(tplType([tpExp(tpExp(tpFun("fiber",2),kVar("r")),kVar("s")),kVar("r")]),kVar("s"))]),tpExp(tpExp(tpFun("fiber",2),kVar("r")),kVar("s")))))).
escapeType("sqrt",funType(tplType([type("float")]),type("float"),type("errorCode"))).
escapeType("exp",funType(tplType([type("float")]),type("float"),type("errorCode"))).
escapeType("log",funType(tplType([type("float")]),type("float"))).
escapeType("log10",funType(tplType([type("float")]),type("float"))).
escapeType("pi",funType(tplType([]),type("float"))).
escapeType("sin",funType(tplType([type("float")]),type("float"))).
escapeType("cos",funType(tplType([type("float")]),type("float"))).
escapeType("tan",funType(tplType([type("float")]),type("float"))).
escapeType("asin",funType(tplType([type("float")]),type("float"))).
escapeType("acos",funType(tplType([type("float")]),type("float"))).
escapeType("atan",funType(tplType([type("float")]),type("float"))).
escapeType("trunc",funType(tplType([type("float")]),type("float"))).
escapeType("floor",funType(tplType([type("float")]),type("float"))).
escapeType("ceil",funType(tplType([type("float")]),type("float"))).
escapeType("integral",funType(tplType([type("float")]),type("boolean"))).
escapeType("_irand",funType(tplType([type("integer")]),type("integer"))).
escapeType("_random",funType(tplType([]),type("float"))).
escapeType("_seed",funType(tplType([type("integer")]),tplType([]))).
escapeType("_ldexp",funType(tplType([type("float"),type("integer")]),type("float"))).
escapeType("_frexp",funType(tplType([type("float")]),tplType([type("float"),type("integer")]))).
escapeType("_modf",funType(tplType([type("float")]),tplType([type("float"),type("integer")]))).
escapeType("_band",funType(tplType([type("integer"),type("integer")]),type("integer"))).
escapeType("_bor",funType(tplType([type("integer"),type("integer")]),type("integer"))).
escapeType("_bxor",funType(tplType([type("integer"),type("integer")]),type("integer"))).
escapeType("_blsl",funType(tplType([type("integer"),type("integer")]),type("integer"))).
escapeType("_blsr",funType(tplType([type("integer"),type("integer")]),type("integer"))).
escapeType("_basr",funType(tplType([type("integer"),type("integer")]),type("integer"))).
escapeType("_bnot",funType(tplType([type("integer")]),type("integer"))).
escapeType("_cell_future",allType(kVar("s"),allType(kVar("e"),funType(tplType([tpExp(tpFun("ref",1),tpExp(tpExp(tpFun("star.either*either",2),kVar("s")),kVar("e")))]),tpExp(tpExp(tpFun("future",2),kVar("s")),kVar("e")))))).
escapeType("_futureIsResolved",allType(kVar("a"),allType(kVar("e"),funType(tplType([tpExp(tpExp(tpFun("future",2),kVar("a")),kVar("e"))]),type("boolean"))))).
escapeType("_futureIsAccepted",allType(kVar("a"),allType(kVar("e"),funType(tplType([tpExp(tpExp(tpFun("future",2),kVar("a")),kVar("e"))]),type("boolean"))))).
escapeType("_futureIsRejected",allType(kVar("a"),allType(kVar("e"),funType(tplType([tpExp(tpExp(tpFun("future",2),kVar("a")),kVar("e"))]),type("boolean"))))).
escapeType("_futureVal",allType(kVar("a"),allType(kVar("e"),funType(tplType([tpExp(tpExp(tpFun("future",2),kVar("a")),kVar("e"))]),kVar("a"),kVar("e"))))).
escapeType("_tuple_nth",allType(kVar("a"),allType(kVar("e"),funType(tplType([kVar("a"),type("integer")]),kVar("e"))))).
escapeType("_tuple_set_nth",allType(kVar("a"),allType(kVar("e"),funType(tplType([kVar("a"),type("integer"),kVar("e")]),kVar("a"))))).
escapeType("_cwd",funType(tplType([]),type("string"))).
escapeType("_cd",funType(tplType([type("string")]),tplType([]),type("errorCode"))).
escapeType("_rm",funType(tplType([type("string")]),tplType([]),type("errorCode"))).
escapeType("_mv",funType(tplType([type("string"),type("string")]),tplType([]),type("errorCode"))).
escapeType("_mkdir",funType(tplType([type("string"),type("integer")]),tplType([]),type("errorCode"))).
escapeType("_rmdir",funType(tplType([type("string")]),tplType([]),type("errorCode"))).
escapeType("_isdir",funType(tplType([type("string")]),type("boolean"))).
escapeType("_file_chmod",funType(tplType([type("string"),type("integer")]),tplType([]),type("errorCode"))).
escapeType("_ls",funType(tplType([type("string")]),tpExp(tpFun("cons",1),type("string")),type("errorCode"))).
escapeType("_repo",funType(tplType([]),type("string"))).
escapeType("_file_mode",funType(tplType([type("string")]),type("integer"),type("errorCode"))).
escapeType("_file_present",funType(tplType([type("string")]),type("boolean"))).
escapeType("_file_type",funType(tplType([type("string")]),type("integer"),type("errorCode"))).
escapeType("_file_size",funType(tplType([type("string")]),type("integer"),type("errorCode"))).
escapeType("_file_modified",funType(tplType([type("string")]),type("integer"),type("errorCode"))).
escapeType("_file_date",funType(tplType([type("string")]),tplType([type("integer"),type("integer"),type("integer")]),type("errorCode"))).
escapeType("_openInFile",funType(tplType([type("string"),type("integer")]),type("ioHandle"),type("errorCode"))).
escapeType("_openOutFile",funType(tplType([type("string"),type("integer")]),type("ioHandle"),type("errorCode"))).
escapeType("_openAppendFile",funType(tplType([type("string"),type("integer")]),type("ioHandle"),type("errorCode"))).
escapeType("_openAppendIOFile",funType(tplType([type("string"),type("integer")]),type("ioHandle"),type("errorCode"))).
escapeType("_popen",funType(tplType([type("string"),tpExp(tpFun("cons",1),type("string")),tpExp(tpFun("cons",1),tplType([type("string"),type("string")]))]),tplType([type("ioHandle"),type("ioHandle"),type("ioHandle")]),type("errorCode"))).
escapeType("_close",funType(tplType([type("ioHandle")]),tplType([]),type("errorCode"))).
escapeType("_end_of_file",funType(tplType([type("ioHandle")]),type("boolean"))).
escapeType("_inchars",funType(tplType([type("ioHandle"),type("integer")]),type("string"),type("errorCode"))).
escapeType("_inchars_async",funType(tplType([type("ioHandle"),type("integer")]),tpExp(tpExp(tpFun("future",2),type("string")),type("errorCode")),type("errorCode"))).
escapeType("_inchar",funType(tplType([type("ioHandle")]),type("char"),type("errorCode"))).
escapeType("_inchar_async",funType(tplType([type("ioHandle")]),tpExp(tpExp(tpFun("future",2),type("char")),type("errorCode")),type("errorCode"))).
escapeType("_inbyte",funType(tplType([type("ioHandle")]),type("integer"),type("errorCode"))).
escapeType("_inbyte_async",funType(tplType([type("ioHandle")]),tpExp(tpExp(tpFun("future",2),type("integer")),type("errorCode")),type("errorCode"))).
escapeType("_inbytes",funType(tplType([type("ioHandle"),type("integer")]),tpExp(tpFun("star.vector*vect",1),type("integer")),type("errorCode"))).
escapeType("_inbytes_async",funType(tplType([type("ioHandle"),type("integer")]),tpExp(tpExp(tpFun("future",2),tpExp(tpFun("star.vector*vect",1),type("integer"))),type("errorCode")),type("errorCode"))).
escapeType("_inline",funType(tplType([type("ioHandle")]),type("string"),type("errorCode"))).
escapeType("_inline_async",funType(tplType([type("ioHandle")]),tpExp(tpExp(tpFun("future",2),type("string")),type("errorCode")),type("errorCode"))).
escapeType("_outchar",funType(tplType([type("ioHandle"),type("char")]),tplType([]),type("errorCode"))).
escapeType("_outchar_async",funType(tplType([type("ioHandle"),type("char")]),tpExp(tpExp(tpFun("future",2),tplType([])),type("errorCode")),type("errorCode"))).
escapeType("_outbyte",funType(tplType([type("ioHandle"),type("integer")]),tplType([]),type("errorCode"))).
escapeType("_outbyte_async",funType(tplType([type("ioHandle"),type("integer")]),tpExp(tpExp(tpFun("future",2),tplType([])),type("errorCode")),type("errorCode"))).
escapeType("_outbytes",funType(tplType([type("ioHandle"),tpExp(tpFun("cons",1),type("integer"))]),tplType([]),type("errorCode"))).
escapeType("_outtext",funType(tplType([type("ioHandle"),type("string")]),tplType([]),type("errorCode"))).
escapeType("_outtext_async",funType(tplType([type("ioHandle"),type("string")]),tpExp(tpExp(tpFun("future",2),tplType([])),type("errorCode")),type("errorCode"))).
escapeType("_stdfile",funType(tplType([type("integer")]),type("ioHandle"))).
escapeType("_fposition",funType(tplType([type("ioHandle")]),type("integer"))).
escapeType("_fseek",funType(tplType([type("ioHandle"),type("integer")]),tplType([]),type("errorCode"))).
escapeType("_flush",funType(tplType([type("ioHandle")]),tplType([]),type("errorCode"))).
escapeType("_flushall",funType(tplType([]),tplType([]))).
escapeType("_fname",funType(tplType([type("ioHandle")]),type("string"))).
escapeType("_waitIo",allType(kVar("e"),funType(tplType([tpExp(tpFun("cons",1),tplType([type("ioHandle"),funType(tplType([]),type("boolean")),kVar("e")])),type("integer")]),type("boolean")))).
escapeType("_setfileencoding",funType(tplType([type("ioHandle"),type("integer")]),tplType([]))).
escapeType("_get_file",funType(tplType([type("string")]),type("string"),type("errorCode"))).
escapeType("_put_file",funType(tplType([type("string"),type("string")]),tplType([]),type("errorCode"))).
escapeType("_show",funType(tplType([type("string")]),tplType([]))).
escapeType("_install_pkg",funType(tplType([type("string")]),tpExp(tpFun("cons",1),tplType([type("string"),type("string")])),type("errorCode"))).
escapeType("_pkg_is_present",funType(tplType([type("string"),type("string")]),type("boolean"),type("errorCode"))).
escapeType("_in_manifest",funType(tplType([type("string"),type("string"),type("string")]),type("boolean"),type("errorCode"))).
escapeType("_locate_in_manifest",funType(tplType([type("string"),type("string"),type("string")]),type("string"),type("errorCode"))).
escapeType("_logmsg",funType(tplType([type("string")]),tplType([]))).
escapeType("_display_depth",funType(tplType([]),type("integer"))).
escapeType("_connect",funType(tplType([type("string"),type("integer"),type("integer")]),tplType([type("ioHandle"),type("ioHandle")]),type("errorCode"))).
escapeType("_listen",funType(tplType([type("integer")]),type("ioHandle"),type("errorCode"))).
escapeType("_accept",funType(tplType([type("ioHandle")]),tplType([type("ioHandle"),type("ioHandle"),type("string"),type("integer"),type("string")]),type("errorCode"))).
escapeType("_hosttoip",funType(tplType([type("string")]),tpExp(tpFun("cons",1),type("string")))).
escapeType("_iptohost",funType(tplType([type("string")]),type("string"),type("errorCode"))).
escapeType("_delay",funType(tplType([type("float")]),tplType([]),type("errorCode"))).
escapeType("_sleep",funType(tplType([type("float")]),tplType([]),type("errorCode"))).
escapeType("_now",funType(tplType([]),type("float"))).
escapeType("_today",funType(tplType([]),type("float"))).
escapeType("_ticks",funType(tplType([]),type("integer"))).
escapeType("_time2date",funType(tplType([type("float")]),tplType([type("integer"),type("integer"),type("integer"),type("integer"),type("integer"),type("integer"),type("float"),type("integer")]))).
escapeType("_time2utc",funType(tplType([type("float")]),tplType([type("integer"),type("integer"),type("integer"),type("integer"),type("integer"),type("integer"),type("float"),type("integer")]))).
escapeType("_date2time",funType(tplType([type("integer"),type("integer"),type("integer"),type("integer"),type("integer"),type("float"),type("integer")]),type("float"))).
escapeType("_utc2time",funType(tplType([type("integer"),type("integer"),type("integer"),type("integer"),type("integer"),type("float"),type("integer")]),type("float"))).
escapeType("_formattime",funType(tplType([type("float"),type("string")]),type("string"),type("errorCode"))).
escapeType("_parsetime",funType(tplType([type("string"),type("string")]),tpExp(tpFun("option",1),type("float")))).
escapeType("_uniCodeCategory",funType(tplType([type("char")]),type("integer"))).
escapeType("_isCcChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isCfChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isCnChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isCoChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isCsChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isLlChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isLmChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isLoChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isLtChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isLuChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isMcChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isMeChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isMnChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isNdChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isNlChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isNoChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isPcChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isPdChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isPeChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isPfChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isPiChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isPoChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isPsChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isScChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isSkChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isSmChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isSoChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isZlChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isZpChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isZsChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_isLetterChar",funType(tplType([type("char")]),type("boolean"))).
escapeType("_digitCode",funType(tplType([type("char")]),type("integer"),type("errorCode"))).
escapeType("_codePoint",funType(tplType([type("char")]),type("integer"))).
escapeType("_char",funType(tplType([type("integer")]),type("char"))).
escapeType("_int2str",funType(tplType([type("integer"),type("integer"),type("integer"),type("integer")]),type("string"))).
escapeType("_flt2str",funType(tplType([type("float"),type("integer"),type("char"),type("boolean")]),type("string"))).
escapeType("_int_format",funType(tplType([type("integer"),type("string")]),type("string"),type("errorCode"))).
escapeType("_flt_format",funType(tplType([type("float"),type("string")]),type("string"),type("errorCode"))).
escapeType("_str2flt",funType(tplType([type("string")]),tpExp(tpFun("option",1),type("float")))).
escapeType("_str2int",funType(tplType([type("string")]),tpExp(tpFun("option",1),type("integer")))).
escapeType("_chr_eq",funType(tplType([type("char"),type("char")]),type("boolean"))).
escapeType("_chr_lt",funType(tplType([type("char"),type("char")]),type("boolean"))).
escapeType("_chr_ge",funType(tplType([type("char"),type("char")]),type("boolean"))).
escapeType("_chr_hash",funType(tplType([type("char")]),type("integer"))).
escapeType("_chr_quote",funType(tplType([type("char")]),type("string"))).
escapeType("_chr_format",funType(tplType([type("char"),type("string")]),type("string"))).
escapeType("_str_eq",funType(tplType([type("string"),type("string")]),type("boolean"))).
escapeType("_str_lt",funType(tplType([type("string"),type("string")]),type("boolean"))).
escapeType("_str_ge",funType(tplType([type("string"),type("string")]),type("boolean"))).
escapeType("_str_hash",funType(tplType([type("string")]),type("integer"))).
escapeType("_str_len",funType(tplType([type("string")]),type("integer"))).
escapeType("_str_gen",funType(tplType([type("string")]),type("string"))).
escapeType("_stringOf",allType(kVar("r"),funType(tplType([kVar("r"),type("integer")]),type("string")))).
escapeType("_explode",funType(tplType([type("string")]),tpExp(tpFun("cons",1),type("char")))).
escapeType("_implode",funType(tplType([tpExp(tpFun("cons",1),type("char"))]),type("string"))).
escapeType("_str_find",funType(tplType([type("string"),type("string"),type("integer")]),type("integer"))).
escapeType("_sub_str",funType(tplType([type("string"),type("integer"),type("integer")]),type("string"))).
escapeType("_str_split",funType(tplType([type("string"),type("integer")]),tplType([type("string"),type("string")]))).
escapeType("_str_concat",funType(tplType([type("string"),type("string")]),type("string"))).
escapeType("_str_reverse",funType(tplType([type("string")]),type("string"))).
escapeType("_str_start",funType(tplType([type("string"),type("string")]),type("boolean"))).
escapeType("_str_end",funType(tplType([type("string"),type("string")]),type("boolean"))).
escapeType("_str_splice",funType(tplType([type("string"),type("integer"),type("integer"),type("string")]),type("string"))).
escapeType("_str_multicat",funType(tplType([tpExp(tpFun("cons",1),type("string"))]),type("string"))).
escapeType("_str_hdtl",funType(tplType([type("string")]),tpExp(tpFun("option",1),tplType([type("char"),type("string")])))).
escapeType("_str_back",funType(tplType([type("string")]),tplType([type("string"),type("char")]),type("errorCode"))).
escapeType("_str_cons",funType(tplType([type("char"),type("string")]),type("string"))).
escapeType("_code2str",funType(tplType([type("char")]),type("string"))).
escapeType("_str_apnd",funType(tplType([type("string"),type("char")]),type("string"))).
escapeType("_str_charat",funType(tplType([type("string"),type("integer")]),tpExp(tpFun("option",1),type("char")))).
escapeType("_str_quote",funType(tplType([type("string")]),type("string"))).
escapeType("_str_format",funType(tplType([type("string"),type("string")]),type("string"))).
escapeType("_getenv",funType(tplType([type("string")]),tpExp(tpFun("option",1),type("string")))).
escapeType("_setenv",funType(tplType([type("string"),type("string")]),tplType([]),type("errorCode"))).
escapeType("_envir",funType(tplType([]),tpExp(tpFun("cons",1),tplType([type("string"),type("string")])))).
escapeType("_fork",funType(tplType([funType(tplType([]),tplType([]))]),type("star.thread*thread"))).
escapeType("_thread",funType(tplType([]),type("star.thread*thread"))).
escapeType("_kill",funType(tplType([type("star.thread*thread")]),tplType([]),type("errorCode"))).
escapeType("_thread_state",funType(tplType([type("star.thread*thread")]),type("star.thread*threadState"))).
escapeType("_waitfor",funType(tplType([type("star.thread*thread")]),tplType([]),type("errorCode"))).
escapeType("_shell",funType(tplType([type("string"),tpExp(tpFun("cons",1),type("string")),tpExp(tpFun("cons",1),tplType([type("string"),type("string")]))]),type("integer"),type("errorCode"))).
escapeType("_ins_debug",funType(tplType([]),tplType([]))).
escapeType("_stackTrace",funType(tplType([]),type("string"))).
escapeType("_jit_compile",allType(kVar("a"),allType(kVar("e"),funType(tplType([funType(tplType([kVar("a")]),kVar("e"))]),tplType([]),type("errorCode"))))).


isEscape("_exit").
isEscape("_abort").
isEscape("_definedLbl").
isEscape("_globalIsSet").
isEscape("_int_plus").
isEscape("_int_minus").
isEscape("_int_times").
isEscape("_int_div").
isEscape("_int_mod").
isEscape("_int_hash").
isEscape("_int_gcd").
isEscape("_int_lg2").
isEscape("_flt_plus").
isEscape("_flt_minus").
isEscape("_flt_times").
isEscape("_flt_div").
isEscape("_flt_mod").
isEscape("_int_abs").
isEscape("_flt_abs").
isEscape("_int_eq").
isEscape("_int_lt").
isEscape("_int_ge").
isEscape("_int_pow").
isEscape("_flt_eq").
isEscape("_flt_lt").
isEscape("_flt_ge").
isEscape("_int2flt").
isEscape("_flt2int").
isEscape("_bits_float").
isEscape("_float_bits").
isEscape("_flt_hash").
isEscape("_flt_pwr").
isEscape("_big_plus").
isEscape("_big_minus").
isEscape("_big_times").
isEscape("_big_div").
isEscape("_big_bitand").
isEscape("_big_bitor").
isEscape("_big_bitxor").
isEscape("_big_bitnot").
isEscape("_big_gcd").
isEscape("_big_hash").
isEscape("_big_eq").
isEscape("_big_lt").
isEscape("_big_ge").
isEscape("_int2big").
isEscape("_big2int").
isEscape("_ints2big").
isEscape("_big2ints").
isEscape("_str2big").
isEscape("_big2str").
isEscape("_big_format").
isEscape("_fiber_eq").
isEscape("_fiber").
isEscape("sqrt").
isEscape("exp").
isEscape("log").
isEscape("log10").
isEscape("pi").
isEscape("sin").
isEscape("cos").
isEscape("tan").
isEscape("asin").
isEscape("acos").
isEscape("atan").
isEscape("trunc").
isEscape("floor").
isEscape("ceil").
isEscape("integral").
isEscape("_irand").
isEscape("_random").
isEscape("_seed").
isEscape("_ldexp").
isEscape("_frexp").
isEscape("_modf").
isEscape("_band").
isEscape("_bor").
isEscape("_bxor").
isEscape("_blsl").
isEscape("_blsr").
isEscape("_basr").
isEscape("_bnot").
isEscape("_cell_future").
isEscape("_futureIsResolved").
isEscape("_futureIsAccepted").
isEscape("_futureIsRejected").
isEscape("_futureVal").
isEscape("_tuple_nth").
isEscape("_tuple_set_nth").
isEscape("_cwd").
isEscape("_cd").
isEscape("_rm").
isEscape("_mv").
isEscape("_mkdir").
isEscape("_rmdir").
isEscape("_isdir").
isEscape("_file_chmod").
isEscape("_ls").
isEscape("_repo").
isEscape("_file_mode").
isEscape("_file_present").
isEscape("_file_type").
isEscape("_file_size").
isEscape("_file_modified").
isEscape("_file_date").
isEscape("_openInFile").
isEscape("_openOutFile").
isEscape("_openAppendFile").
isEscape("_openAppendIOFile").
isEscape("_popen").
isEscape("_close").
isEscape("_end_of_file").
isEscape("_inchars").
isEscape("_inchars_async").
isEscape("_inchar").
isEscape("_inchar_async").
isEscape("_inbyte").
isEscape("_inbyte_async").
isEscape("_inbytes").
isEscape("_inbytes_async").
isEscape("_inline").
isEscape("_inline_async").
isEscape("_outchar").
isEscape("_outchar_async").
isEscape("_outbyte").
isEscape("_outbyte_async").
isEscape("_outbytes").
isEscape("_outtext").
isEscape("_outtext_async").
isEscape("_stdfile").
isEscape("_fposition").
isEscape("_fseek").
isEscape("_flush").
isEscape("_flushall").
isEscape("_fname").
isEscape("_waitIo").
isEscape("_setfileencoding").
isEscape("_get_file").
isEscape("_put_file").
isEscape("_show").
isEscape("_install_pkg").
isEscape("_pkg_is_present").
isEscape("_in_manifest").
isEscape("_locate_in_manifest").
isEscape("_logmsg").
isEscape("_display_depth").
isEscape("_connect").
isEscape("_listen").
isEscape("_accept").
isEscape("_hosttoip").
isEscape("_iptohost").
isEscape("_delay").
isEscape("_sleep").
isEscape("_now").
isEscape("_today").
isEscape("_ticks").
isEscape("_time2date").
isEscape("_time2utc").
isEscape("_date2time").
isEscape("_utc2time").
isEscape("_formattime").
isEscape("_parsetime").
isEscape("_uniCodeCategory").
isEscape("_isCcChar").
isEscape("_isCfChar").
isEscape("_isCnChar").
isEscape("_isCoChar").
isEscape("_isCsChar").
isEscape("_isLlChar").
isEscape("_isLmChar").
isEscape("_isLoChar").
isEscape("_isLtChar").
isEscape("_isLuChar").
isEscape("_isMcChar").
isEscape("_isMeChar").
isEscape("_isMnChar").
isEscape("_isNdChar").
isEscape("_isNlChar").
isEscape("_isNoChar").
isEscape("_isPcChar").
isEscape("_isPdChar").
isEscape("_isPeChar").
isEscape("_isPfChar").
isEscape("_isPiChar").
isEscape("_isPoChar").
isEscape("_isPsChar").
isEscape("_isScChar").
isEscape("_isSkChar").
isEscape("_isSmChar").
isEscape("_isSoChar").
isEscape("_isZlChar").
isEscape("_isZpChar").
isEscape("_isZsChar").
isEscape("_isLetterChar").
isEscape("_digitCode").
isEscape("_codePoint").
isEscape("_char").
isEscape("_int2str").
isEscape("_flt2str").
isEscape("_int_format").
isEscape("_flt_format").
isEscape("_str2flt").
isEscape("_str2int").
isEscape("_chr_eq").
isEscape("_chr_lt").
isEscape("_chr_ge").
isEscape("_chr_hash").
isEscape("_chr_quote").
isEscape("_chr_format").
isEscape("_str_eq").
isEscape("_str_lt").
isEscape("_str_ge").
isEscape("_str_hash").
isEscape("_str_len").
isEscape("_str_gen").
isEscape("_stringOf").
isEscape("_explode").
isEscape("_implode").
isEscape("_str_find").
isEscape("_sub_str").
isEscape("_str_split").
isEscape("_str_concat").
isEscape("_str_reverse").
isEscape("_str_start").
isEscape("_str_end").
isEscape("_str_splice").
isEscape("_str_multicat").
isEscape("_str_hdtl").
isEscape("_str_back").
isEscape("_str_cons").
isEscape("_code2str").
isEscape("_str_apnd").
isEscape("_str_charat").
isEscape("_str_quote").
isEscape("_str_format").
isEscape("_getenv").
isEscape("_setenv").
isEscape("_envir").
isEscape("_fork").
isEscape("_thread").
isEscape("_kill").
isEscape("_thread_state").
isEscape("_waitfor").
isEscape("_shell").
isEscape("_ins_debug").
isEscape("_stackTrace").
isEscape("_jit_compile").

