/* Automatically generated, do not edit */

:-module(escapes,[isEscape/1,escapeType/2]).

escapeType("_exit",funType(tplType([type("star.core*integer")]),tplType([]))).
escapeType("_command_line",funType(tplType([]),tpExp(tpFun("star.core*cons",1),type("star.core*string")))).
escapeType("_abort",allType(kVar("s"),funType(tplType([kVar("s"),type("star.core*string")]),tplType([])))).
escapeType("_definedLbl",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_callLbl",funType(tplType([type("star.core*string"),type("star.core*integer"),tpExp(tpFun("star.core*cons",1),tpExp(tpFun("star.core*cons",1),type("star.core*string")))]),tplType([]))).
escapeType("_int_plus",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_minus",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_times",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_div",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_mod",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_hash",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_flt_plus",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_flt_minus",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_flt_times",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_flt_div",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_flt_mod",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("_int_abs",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_flt_abs",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_int_eq",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_int_lt",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_int_ge",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_flt_eq",funType(tplType([type("star.core*float"),type("star.core*float"),type("star.core*float")]),type("star.core*boolean"))).
escapeType("_flt_lt",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*boolean"))).
escapeType("_flt_ge",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*boolean"))).
escapeType("_int2flt",funType(tplType([type("star.core*integer")]),type("star.core*float"))).
escapeType("_flt2int",funType(tplType([type("star.core*float")]),type("star.core*integer"))).
escapeType("_bits_float",funType(tplType([type("star.core*integer")]),type("star.core*float"))).
escapeType("_float_bits",funType(tplType([type("star.core*float")]),type("star.core*integer"))).
escapeType("_flt_hash",funType(tplType([type("star.core*float")]),type("star.core*integer"))).
escapeType("_flt_pwr",funType(tplType([type("star.core*float"),type("star.core*float")]),type("star.core*float"))).
escapeType("sqrt",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("exp",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("log",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("log10",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("pi",funType(tplType([]),type("star.core*float"))).
escapeType("sin",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("cos",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("tan",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("asin",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("acos",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("atan",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("trunc",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("floor",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("ceil",funType(tplType([type("star.core*float")]),type("star.core*float"))).
escapeType("integral",funType(tplType([type("star.core*float")]),type("star.core*boolean"))).
escapeType("_irand",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_random",funType(tplType([]),type("star.core*float"))).
escapeType("_seed",funType(tplType([type("star.core*integer")]),tplType([]))).
escapeType("_ldexp",funType(tplType([type("star.core*float"),type("star.core*integer")]),type("star.core*float"))).
escapeType("_frexp",funType(tplType([type("star.core*float")]),tplType([type("star.core*float"),type("star.core*integer")]))).
escapeType("_modf",funType(tplType([type("star.core*float")]),tplType([type("star.core*float"),type("star.core*integer")]))).
escapeType("_band",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_bor",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_bxor",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_blsl",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_blsr",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_basr",funType(tplType([type("star.core*integer"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_bnot",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_cell",allType(kVar("t"),funType(tplType([kVar("t")]),refType(kVar("t"))))).
escapeType("_get",allType(kVar("t"),funType(tplType([refType(kVar("t"))]),kVar("t")))).
escapeType("_assign",allType(kVar("t"),funType(tplType([refType(kVar("t")),kVar("t")]),tplType([])))).
escapeType("_overwrite",allType(kVar("t"),funType(tplType([kVar("t"),kVar("t")]),kVar("t")))).
escapeType("_isDefinedVr",allType(kVar("t"),funType(tplType([type("star.core*string")]),type("star.core*boolean")))).
escapeType("_definedVr",allType(kVar("t"),funType(tplType([type("star.core*string")]),kVar("t")))).
escapeType("_defineVr",allType(kVar("t"),funType(tplType([type("star.core*string"),kVar("t")]),type("star.core*boolean")))).
escapeType("_tuple_nth",allType(kVar("t"),allType(kVar("e"),funType(tplType([kVar("t"),type("star.core*integer")]),kVar("e"))))).
escapeType("_tuple_set_nth",allType(kVar("t"),allType(kVar("e"),funType(tplType([kVar("t"),type("star.core*integer"),kVar("e")]),kVar("t"))))).
escapeType("_cwd",funType(tplType([]),type("star.core*string"))).
escapeType("_cd",funType(tplType([type("star.core*string")]),type("star.core*sysResult"))).
escapeType("_rm",funType(tplType([type("star.core*string")]),type("star.core*sysResult"))).
escapeType("_mv",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*sysResult"))).
escapeType("_mkdir",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.core*sysResult"))).
escapeType("_rmdir",funType(tplType([type("star.core*string")]),type("star.core*sysResult"))).
escapeType("_isdir",funType(tplType([type("star.core*string")]),type("star.core*boolean"))).
escapeType("_file_chmod",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.core*sysResult"))).
escapeType("_ls",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*cons",1),type("star.core*string")))).
escapeType("_repo",funType(tplType([]),type("star.core*string"))).
escapeType("_file_mode",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_file_present",funType(tplType([type("star.core*string")]),type("star.core*boolean"))).
escapeType("_file_type",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_file_size",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_file_modified",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_file_date",funType(tplType([type("star.core*string")]),tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer")]))).
escapeType("_openInFile",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_openOutFile",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_openAppendFile",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_openAppendIOFile",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_popen",funType(tplType([type("star.core*string"),tpExp(tpFun("star.core*cons",1),type("star.core*string")),tpExp(tpFun("star.core*cons",1),tplType([type("star.core*string"),type("star.core*string")]))]),tplType([type("star.file*fileHandle"),type("star.file*fileHandle"),type("star.file*fileHandle")]))).
escapeType("_close",funType(tplType([type("star.file*fileHandle")]),type("star.core*sysResult"))).
escapeType("_end_of_file",funType(tplType([type("star.file*fileHandle")]),type("star.core*boolean"))).
escapeType("_ready_to_read",funType(tplType([type("star.file*fileHandle")]),type("star.core*boolean"))).
escapeType("_ready_to_write",funType(tplType([type("star.file*fileHandle")]),type("star.core*boolean"))).
escapeType("_inchars",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),type("star.core*string"))).
escapeType("_inchar",funType(tplType([type("star.file*fileHandle")]),type("star.core*integer"))).
escapeType("_inbyte",funType(tplType([type("star.file*fileHandle")]),type("star.core*integer"))).
escapeType("_inline",funType(tplType([type("star.file*fileHandle")]),type("star.core*string"))).
escapeType("_intext",funType(tplType([type("star.file*fileHandle"),type("star.core*string")]),type("star.core*string"))).
escapeType("_outchar",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),type("star.core*sysResult"))).
escapeType("_outbyte",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),type("star.core*sysResult"))).
escapeType("_outbytes",funType(tplType([type("star.file*fileHandle"),tpExp(tpFun("star.core*cons",1),type("star.core*integer"))]),type("star.core*sysResult"))).
escapeType("_outtext",funType(tplType([type("star.file*fileHandle"),type("star.core*string")]),type("star.core*sysResult"))).
escapeType("_stdfile",funType(tplType([type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_fposition",funType(tplType([type("star.file*fileHandle")]),type("star.core*integer"))).
escapeType("_fseek",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),type("star.core*sysResult"))).
escapeType("_flush",funType(tplType([type("star.file*fileHandle")]),type("star.core*sysResult"))).
escapeType("_flushall",funType(tplType([]),tplType([]))).
escapeType("_setfileencoding",funType(tplType([type("star.file*fileHandle"),type("star.core*integer")]),type("star.core*sysResult"))).
escapeType("_get_file",funType(tplType([type("star.core*string")]),type("star.core*string"))).
escapeType("_put_file",funType(tplType([type("star.core*string"),type("star.core*string")]),tplType([]))).
escapeType("_show",funType(tplType([tplType([type("star.core*string"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer")]),type("star.core*string")]),tplType([]))).
escapeType("_install_pkg",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*cons",1),tplType([type("star.core*string"),type("star.core*string")])))).
escapeType("_pkg_is_present",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_in_manifest",funType(tplType([type("star.core*string"),type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_locate_in_manifest",funType(tplType([type("star.core*string"),type("star.core*string"),type("star.core*string")]),type("star.core*string"))).
escapeType("_logmsg",funType(tplType([type("star.core*string")]),type("star.core*sysResult"))).
escapeType("_connect",funType(tplType([type("star.core*string"),type("star.core*integer"),type("star.core*integer")]),tplType([type("star.file*fileHandle"),type("star.file*fileHandle")]))).
escapeType("_listen",funType(tplType([type("star.core*integer")]),type("star.file*fileHandle"))).
escapeType("_accept",funType(tplType([type("star.file*fileHandle")]),tplType([type("star.file*fileHandle"),type("star.file*fileHandle"),type("star.core*string"),type("star.core*integer"),type("star.core*string")]))).
escapeType("_hosttoip",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*cons",1),type("star.core*string")))).
escapeType("_iptohost",funType(tplType([type("star.core*string")]),type("star.core*string"))).
escapeType("_delay",funType(tplType([type("star.core*float")]),type("star.core*sysResult"))).
escapeType("_sleep",funType(tplType([type("star.core*float")]),type("star.core*sysResult"))).
escapeType("_now",funType(tplType([]),type("star.core*float"))).
escapeType("_today",funType(tplType([]),type("star.core*float"))).
escapeType("_ticks",funType(tplType([]),type("star.core*integer"))).
escapeType("_time2date",funType(tplType([type("star.core*float")]),tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*float"),type("star.core*integer"),type("star.core*integer")]))).
escapeType("_time2utc",funType(tplType([type("star.core*float")]),tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*float"),type("star.core*integer"),type("star.core*integer")]))).
escapeType("_date2time",funType(tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*float"),type("star.core*integer")]),type("star.core*float"))).
escapeType("_utc2time",funType(tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*float"),type("star.core*integer")]),type("star.core*float"))).
escapeType("_uniCodeCategory",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_isCcChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isCfChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isCnChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isCoChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isCsChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isLlChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isLmChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isLoChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isLtChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isLuChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isMcChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isMeChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isMnChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isNdChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isNlChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isNoChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isPcChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isPdChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isPeChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isPfChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isPiChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isPoChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isPsChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isScChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isSkChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isSmChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isSoChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isZlChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isZpChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isZsChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isLetterChar",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_digitCode",funType(tplType([type("star.core*integer")]),type("star.core*integer"))).
escapeType("_isIDStart",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_isIDContinue",funType(tplType([type("star.core*integer")]),type("star.core*boolean"))).
escapeType("_int2str",funType(tplType([type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer")]),type("star.core*string"))).
escapeType("_flt2str",funType(tplType([type("star.core*float"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*boolean")]),type("star.core*string"))).
escapeType("_int_format",funType(tplType([type("star.core*integer"),type("star.core*string")]),type("star.core*string"))).
escapeType("_flt_format",funType(tplType([type("star.core*float"),type("star.core*string")]),type("star.core*string"))).
escapeType("_str2flt",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*option",1),type("star.core*float")))).
escapeType("_str2int",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*option",1),type("star.core*integer")))).
escapeType("_str_eq",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_str_lt",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_str_ge",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_str_hash",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_str_len",funType(tplType([type("star.core*string")]),type("star.core*integer"))).
escapeType("_str_gen",funType(tplType([type("star.core*string")]),type("star.core*string"))).
escapeType("_stringOf",allType(kVar("t"),funType(tplType([kVar("t"),type("star.core*integer")]),type("star.core*string")))).
escapeType("_explode",funType(tplType([type("star.core*string")]),tpExp(tpFun("star.core*cons",1),type("star.core*integer")))).
escapeType("_implode",funType(tplType([tpExp(tpFun("star.core*cons",1),type("star.core*integer"))]),type("star.core*string"))).
escapeType("_str_find",funType(tplType([type("star.core*string"),type("star.core*string"),type("star.core*integer")]),type("star.core*integer"))).
escapeType("_sub_str",funType(tplType([type("star.core*string"),type("star.core*integer"),type("star.core*integer")]),type("star.core*string"))).
escapeType("_str_split",funType(tplType([type("star.core*string"),type("star.core*integer")]),tplType([type("star.core*string"),type("star.core*string")]))).
escapeType("_str_concat",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*string"))).
escapeType("_str_reverse",funType(tplType([type("star.core*string")]),type("star.core*string"))).
escapeType("_str_start",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*boolean"))).
escapeType("_str_splice",funType(tplType([type("star.core*string"),type("star.core*integer"),type("star.core*integer"),type("star.core*string")]),type("star.core*string"))).
escapeType("_str_multicat",funType(tplType([tpExp(tpFun("star.core*cons",1),type("star.core*string"))]),type("star.core*string"))).
escapeType("_str_flatten",funType(tplType([type("star.core*ss")]),type("star.core*string"))).
escapeType("_str_hdtl",funType(tplType([type("star.core*string")]),tplType([type("star.core*integer"),type("star.core*string")]))).
escapeType("_str_back",funType(tplType([type("star.core*string")]),tplType([type("star.core*string"),type("star.core*integer")]))).
escapeType("_str_cons",funType(tplType([type("star.core*integer"),type("star.core*string")]),type("star.core*string"))).
escapeType("_str_apnd",funType(tplType([type("star.core*string"),type("star.core*integer")]),type("star.core*string"))).
escapeType("_getenv",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*string"))).
escapeType("_setenv",funType(tplType([type("star.core*string"),type("star.core*string")]),type("star.core*sysResult"))).
escapeType("_envir",funType(tplType([]),tpExp(tpFun("star.core*cons",1),tplType([type("star.core*string"),type("star.core*string")])))).
escapeType("_getlogin",funType(tplType([]),type("star.core*string"))).
escapeType("_fork",funType(tplType([funType(tplType([]),type("star.core*sysResult"))]),type("star.thread*thread"))).
escapeType("_thread",funType(tplType([]),type("star.thread*thread"))).
escapeType("_kill",funType(tplType([type("star.thread*thread")]),type("star.core*sysResult"))).
escapeType("_thread_state",funType(tplType([type("star.thread*thread")]),type("star.thread*threadState"))).
escapeType("_waitfor",funType(tplType([type("star.thread*thread")]),type("star.core*sysResult"))).
escapeType("_shell",funType(tplType([type("star.core*string"),tpExp(tpFun("star.core*cons",1),type("star.core*string")),tpExp(tpFun("star.core*cons",1),tplType([type("star.core*string"),type("star.core*string")]))]),type("star.core*integer"))).
escapeType("_newLock",funType(tplType([]),type("star.thread*lock"))).
escapeType("_acquireLock",funType(tplType([type("star.thread*lock"),type("star.core*float")]),type("star.core*sysResult"))).
escapeType("_waitLock",funType(tplType([type("star.thread*lock"),type("star.core*float")]),type("star.core*sysResult"))).
escapeType("_releaseLock",funType(tplType([type("star.thread*lock")]),type("star.core*sysResult"))).
escapeType("_ins_debug",funType(tplType([]),tplType([]))).
escapeType("_stackTrace",funType(tplType([]),tplType([]))).
escapeType("_assert",funType(tplType([type("star.core*boolean"),tplType([type("star.core*string"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer"),type("star.core*integer")])]),tplType([]))).
isEscape("_exit").
isEscape("_command_line").
isEscape("_abort").
isEscape("_definedLbl").
isEscape("_callLbl").
isEscape("_int_plus").
isEscape("_int_minus").
isEscape("_int_times").
isEscape("_int_div").
isEscape("_int_mod").
isEscape("_int_hash").
isEscape("_flt_plus").
isEscape("_flt_minus").
isEscape("_flt_times").
isEscape("_flt_div").
isEscape("_flt_mod").
isEscape("_int_abs").
isEscape("_flt_abs").
isEscape("_int_eq").
isEscape("_int_lt").
isEscape("_int_ge").
isEscape("_flt_eq").
isEscape("_flt_lt").
isEscape("_flt_ge").
isEscape("_int2flt").
isEscape("_flt2int").
isEscape("_bits_float").
isEscape("_float_bits").
isEscape("_flt_hash").
isEscape("_flt_pwr").
isEscape("sqrt").
isEscape("exp").
isEscape("log").
isEscape("log10").
isEscape("pi").
isEscape("sin").
isEscape("cos").
isEscape("tan").
isEscape("asin").
isEscape("acos").
isEscape("atan").
isEscape("trunc").
isEscape("floor").
isEscape("ceil").
isEscape("integral").
isEscape("_irand").
isEscape("_random").
isEscape("_seed").
isEscape("_ldexp").
isEscape("_frexp").
isEscape("_modf").
isEscape("_band").
isEscape("_bor").
isEscape("_bxor").
isEscape("_blsl").
isEscape("_blsr").
isEscape("_basr").
isEscape("_bnot").
isEscape("_cell").
isEscape("_get").
isEscape("_assign").
isEscape("_overwrite").
isEscape("_isDefinedVr").
isEscape("_definedVr").
isEscape("_defineVr").
isEscape("_tuple_nth").
isEscape("_tuple_set_nth").
isEscape("_cwd").
isEscape("_cd").
isEscape("_rm").
isEscape("_mv").
isEscape("_mkdir").
isEscape("_rmdir").
isEscape("_isdir").
isEscape("_file_chmod").
isEscape("_ls").
isEscape("_repo").
isEscape("_file_mode").
isEscape("_file_present").
isEscape("_file_type").
isEscape("_file_size").
isEscape("_file_modified").
isEscape("_file_date").
isEscape("_openInFile").
isEscape("_openOutFile").
isEscape("_openAppendFile").
isEscape("_openAppendIOFile").
isEscape("_popen").
isEscape("_close").
isEscape("_end_of_file").
isEscape("_ready_to_read").
isEscape("_ready_to_write").
isEscape("_inchars").
isEscape("_inchar").
isEscape("_inbyte").
isEscape("_inline").
isEscape("_intext").
isEscape("_outchar").
isEscape("_outbyte").
isEscape("_outbytes").
isEscape("_outtext").
isEscape("_stdfile").
isEscape("_fposition").
isEscape("_fseek").
isEscape("_flush").
isEscape("_flushall").
isEscape("_setfileencoding").
isEscape("_get_file").
isEscape("_put_file").
isEscape("_show").
isEscape("_install_pkg").
isEscape("_pkg_is_present").
isEscape("_in_manifest").
isEscape("_locate_in_manifest").
isEscape("_logmsg").
isEscape("_connect").
isEscape("_listen").
isEscape("_accept").
isEscape("_hosttoip").
isEscape("_iptohost").
isEscape("_delay").
isEscape("_sleep").
isEscape("_now").
isEscape("_today").
isEscape("_ticks").
isEscape("_time2date").
isEscape("_time2utc").
isEscape("_date2time").
isEscape("_utc2time").
isEscape("_uniCodeCategory").
isEscape("_isCcChar").
isEscape("_isCfChar").
isEscape("_isCnChar").
isEscape("_isCoChar").
isEscape("_isCsChar").
isEscape("_isLlChar").
isEscape("_isLmChar").
isEscape("_isLoChar").
isEscape("_isLtChar").
isEscape("_isLuChar").
isEscape("_isMcChar").
isEscape("_isMeChar").
isEscape("_isMnChar").
isEscape("_isNdChar").
isEscape("_isNlChar").
isEscape("_isNoChar").
isEscape("_isPcChar").
isEscape("_isPdChar").
isEscape("_isPeChar").
isEscape("_isPfChar").
isEscape("_isPiChar").
isEscape("_isPoChar").
isEscape("_isPsChar").
isEscape("_isScChar").
isEscape("_isSkChar").
isEscape("_isSmChar").
isEscape("_isSoChar").
isEscape("_isZlChar").
isEscape("_isZpChar").
isEscape("_isZsChar").
isEscape("_isLetterChar").
isEscape("_digitCode").
isEscape("_isIDStart").
isEscape("_isIDContinue").
isEscape("_int2str").
isEscape("_flt2str").
isEscape("_int_format").
isEscape("_flt_format").
isEscape("_str2flt").
isEscape("_str2int").
isEscape("_str_eq").
isEscape("_str_lt").
isEscape("_str_ge").
isEscape("_str_hash").
isEscape("_str_len").
isEscape("_str_gen").
isEscape("_stringOf").
isEscape("_explode").
isEscape("_implode").
isEscape("_str_find").
isEscape("_sub_str").
isEscape("_str_split").
isEscape("_str_concat").
isEscape("_str_reverse").
isEscape("_str_start").
isEscape("_str_splice").
isEscape("_str_multicat").
isEscape("_str_flatten").
isEscape("_str_hdtl").
isEscape("_str_back").
isEscape("_str_cons").
isEscape("_str_apnd").
isEscape("_getenv").
isEscape("_setenv").
isEscape("_envir").
isEscape("_getlogin").
isEscape("_fork").
isEscape("_thread").
isEscape("_kill").
isEscape("_thread_state").
isEscape("_waitfor").
isEscape("_shell").
isEscape("_newLock").
isEscape("_acquireLock").
isEscape("_waitLock").
isEscape("_releaseLock").
isEscape("_ins_debug").
isEscape("_stackTrace").
isEscape("_assert").
