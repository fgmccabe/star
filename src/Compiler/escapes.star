/* Automatically generated, do not edit */

star.compiler.escapes{
  import star.
  import star.compiler.types.

  public escapeType:(string)=>option[tipe].
  escapeType("_exit") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer")])),tplType([]))).
  escapeType("_abort") => some(allType(nomnal("a"),tpExp(tpExp(tpFun("=>",2),tplType([nomnal("a"),nomnal("star.core*string")])),tplType([])))).
  escapeType("_definedLbl") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*integer")])),nomnal("star.core*boolean"))).
  escapeType("_callLbl") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*integer"),tpExp(tpFun("star.core*cons",1),tpExp(tpFun("star.core*cons",1),nomnal("star.core*string")))])),tplType([]))).
  escapeType("_fun2cont") => some(allType(nomnal("a"),allType(nomnal("b"),tpExp(tpExp(tpFun("=>",2),tplType([tpExp(tpExp(tpFun("tag",2),nomnal("a")),nomnal("b")),tpExp(tpExp(tpFun("=>",2),tplType([nomnal("a")])),nomnal("b"))])),tpExp(tpExp(tpFun("=>>",2),tplType([nomnal("a")])),nomnal("b")))))).
  escapeType("_int_plus") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_int_minus") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_int_times") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_int_div") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_int_mod") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_int_hash") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_flt_plus") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float"),nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("_flt_minus") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float"),nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("_flt_times") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float"),nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("_flt_div") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float"),nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("_flt_mod") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float"),nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("_int_abs") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_flt_abs") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("_int_eq") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*boolean"))).
  escapeType("_int_lt") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*boolean"))).
  escapeType("_int_ge") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*boolean"))).
  escapeType("_flt_eq") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float"),nomnal("star.core*float"),nomnal("star.core*float")])),nomnal("star.core*boolean"))).
  escapeType("_flt_lt") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float"),nomnal("star.core*float")])),nomnal("star.core*boolean"))).
  escapeType("_flt_ge") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float"),nomnal("star.core*float")])),nomnal("star.core*boolean"))).
  escapeType("_int2flt") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer")])),nomnal("star.core*float"))).
  escapeType("_flt2int") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*integer"))).
  escapeType("_bits_float") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer")])),nomnal("star.core*float"))).
  escapeType("_float_bits") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*integer"))).
  escapeType("_flt_hash") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*integer"))).
  escapeType("_flt_pwr") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float"),nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("_big_plus") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*bigint"),nomnal("star.core*bigint")])),nomnal("star.core*bigint"))).
  escapeType("_big_minus") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*bigint"),nomnal("star.core*bigint")])),nomnal("star.core*bigint"))).
  escapeType("_big_times") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*bigint"),nomnal("star.core*bigint")])),nomnal("star.core*bigint"))).
  escapeType("_big_div") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*bigint"),nomnal("star.core*bigint")])),tplType([nomnal("star.core*bigint"),nomnal("star.core*bigint")]))).
  escapeType("_big_gcd") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*bigint"),nomnal("star.core*bigint")])),nomnal("star.core*bigint"))).
  escapeType("_big_hash") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*bigint")])),nomnal("star.core*integer"))).
  escapeType("_big_eq") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*bigint"),nomnal("star.core*bigint")])),nomnal("star.core*boolean"))).
  escapeType("_big_lt") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*bigint"),nomnal("star.core*bigint")])),nomnal("star.core*boolean"))).
  escapeType("_big_ge") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*bigint"),nomnal("star.core*bigint")])),nomnal("star.core*boolean"))).
  escapeType("_int2big") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer")])),nomnal("star.core*bigint"))).
  escapeType("_big2int") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*bigint")])),tpExp(tpFun("star.core*option",1),nomnal("star.core*integer")))).
  escapeType("_ints2big") => some(tpExp(tpExp(tpFun("=>",2),tplType([tpExp(tpFun("star.core*cons",1),nomnal("star.core*integer"))])),nomnal("star.core*bigint"))).
  escapeType("_big2ints") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*bigint")])),tpExp(tpFun("star.core*cons",1),nomnal("star.core*integer")))).
  escapeType("_str2big") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tpExp(tpFun("star.core*option",1),nomnal("star.core*bigint")))).
  escapeType("_big2str") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*bigint")])),nomnal("star.core*string"))).
  escapeType("_big_format") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*bigint"),nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("sqrt") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("exp") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("log") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("log10") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("pi") => some(tpExp(tpExp(tpFun("=>",2),tplType([])),nomnal("star.core*float"))).
  escapeType("sin") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("cos") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("tan") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("asin") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("acos") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("atan") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("trunc") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("floor") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("ceil") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*float"))).
  escapeType("integral") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),nomnal("star.core*boolean"))).
  escapeType("_irand") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_random") => some(tpExp(tpExp(tpFun("=>",2),tplType([])),nomnal("star.core*float"))).
  escapeType("_seed") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer")])),tplType([]))).
  escapeType("_ldexp") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float"),nomnal("star.core*integer")])),nomnal("star.core*float"))).
  escapeType("_frexp") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),tplType([nomnal("star.core*float"),nomnal("star.core*integer")]))).
  escapeType("_modf") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),tplType([nomnal("star.core*float"),nomnal("star.core*integer")]))).
  escapeType("_band") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_bor") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_bxor") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_blsl") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_blsr") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_basr") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_bnot") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_cell") => some(allType(nomnal("t"),tpExp(tpExp(tpFun("=>",2),tplType([nomnal("t")])),tpExp(tpFun("star.core*ref",1),nomnal("t"))))).
  escapeType("_get") => some(allType(nomnal("t"),tpExp(tpExp(tpFun("=>",2),tplType([tpExp(tpFun("star.core*ref",1),nomnal("t"))])),nomnal("t")))).
  escapeType("_assign") => some(allType(nomnal("t"),tpExp(tpExp(tpFun("=>",2),tplType([tpExp(tpFun("star.core*ref",1),nomnal("t")),nomnal("t")])),tplType([])))).
  escapeType("_overwrite") => some(allType(nomnal("t"),tpExp(tpExp(tpFun("=>",2),tplType([nomnal("t"),nomnal("t")])),nomnal("t")))).
  escapeType("_tuple_nth") => some(allType(nomnal("t"),allType(nomnal("e"),tpExp(tpExp(tpFun("=>",2),tplType([nomnal("t"),nomnal("star.core*integer")])),nomnal("e"))))).
  escapeType("_tuple_set_nth") => some(allType(nomnal("t"),allType(nomnal("e"),tpExp(tpExp(tpFun("=>",2),tplType([nomnal("t"),nomnal("star.core*integer"),nomnal("e")])),nomnal("t"))))).
  escapeType("_cwd") => some(tpExp(tpExp(tpFun("=>",2),tplType([])),nomnal("star.core*string"))).
  escapeType("_cd") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_rm") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_mv") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*string")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_mkdir") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*integer")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_rmdir") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_isdir") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),nomnal("star.core*boolean"))).
  escapeType("_file_chmod") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*integer")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_ls") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tpExp(tpFun("star.core*cons",1),nomnal("star.core*string")))).
  escapeType("_repo") => some(tpExp(tpExp(tpFun("=>",2),tplType([])),nomnal("star.core*string"))).
  escapeType("_file_mode") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),nomnal("star.core*integer"))).
  escapeType("_file_present") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),nomnal("star.core*boolean"))).
  escapeType("_file_type") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),nomnal("star.core*integer"))).
  escapeType("_file_size") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),nomnal("star.core*integer"))).
  escapeType("_file_modified") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),nomnal("star.core*integer"))).
  escapeType("_file_date") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tplType([nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer")]))).
  escapeType("_openInFile") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*integer")])),nomnal("star.file*fileHandle"))).
  escapeType("_openOutFile") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*integer")])),nomnal("star.file*fileHandle"))).
  escapeType("_openAppendFile") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*integer")])),nomnal("star.file*fileHandle"))).
  escapeType("_openAppendIOFile") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*integer")])),nomnal("star.file*fileHandle"))).
  escapeType("_popen") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),tpExp(tpFun("star.core*cons",1),nomnal("star.core*string")),tpExp(tpFun("star.core*cons",1),tplType([nomnal("star.core*string"),nomnal("star.core*string")]))])),tplType([nomnal("star.file*fileHandle"),nomnal("star.file*fileHandle"),nomnal("star.file*fileHandle")]))).
  escapeType("_close") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_end_of_file") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle")])),nomnal("star.core*boolean"))).
  escapeType("_ready_to_read") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle")])),nomnal("star.core*boolean"))).
  escapeType("_ready_to_write") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle")])),nomnal("star.core*boolean"))).
  escapeType("_inchars") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle"),nomnal("star.core*integer")])),nomnal("star.core*string"))).
  escapeType("_inchar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle")])),nomnal("star.core*integer"))).
  escapeType("_inbyte") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle")])),nomnal("star.core*integer"))).
  escapeType("_inline") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle")])),nomnal("star.core*string"))).
  escapeType("_intext") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle"),nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_outchar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle"),nomnal("star.core*integer")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_outbyte") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle"),nomnal("star.core*integer")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_outbytes") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle"),tpExp(tpFun("star.core*cons",1),nomnal("star.core*integer"))])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_outtext") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle"),nomnal("star.core*string")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_stdfile") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer")])),nomnal("star.file*fileHandle"))).
  escapeType("_fposition") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle")])),nomnal("star.core*integer"))).
  escapeType("_fseek") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle"),nomnal("star.core*integer")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_flush") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_flushall") => some(tpExp(tpExp(tpFun("=>",2),tplType([])),tplType([]))).
  escapeType("_setfileencoding") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle"),nomnal("star.core*integer")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_get_file") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_put_file") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*string")])),tplType([]))).
  escapeType("_show") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tplType([]))).
  escapeType("_install_pkg") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tpExp(tpFun("star.core*cons",1),tplType([nomnal("star.core*string"),nomnal("star.core*string")])))).
  escapeType("_pkg_is_present") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*string")])),nomnal("star.core*boolean"))).
  escapeType("_in_manifest") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*string"),nomnal("star.core*string")])),nomnal("star.core*boolean"))).
  escapeType("_locate_in_manifest") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*string"),nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_logmsg") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tplType([]))).
  escapeType("_connect") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*integer"),nomnal("star.core*integer")])),tplType([nomnal("star.file*fileHandle"),nomnal("star.file*fileHandle")]))).
  escapeType("_listen") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer")])),nomnal("star.file*fileHandle"))).
  escapeType("_accept") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.file*fileHandle")])),tplType([nomnal("star.file*fileHandle"),nomnal("star.file*fileHandle"),nomnal("star.core*string"),nomnal("star.core*integer"),nomnal("star.core*string")]))).
  escapeType("_hosttoip") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tpExp(tpFun("star.core*cons",1),nomnal("star.core*string")))).
  escapeType("_iptohost") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_delay") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),tplType([]))).
  escapeType("_sleep") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),tplType([]))).
  escapeType("_now") => some(tpExp(tpExp(tpFun("=>",2),tplType([])),nomnal("star.core*float"))).
  escapeType("_today") => some(tpExp(tpExp(tpFun("=>",2),tplType([])),nomnal("star.core*float"))).
  escapeType("_ticks") => some(tpExp(tpExp(tpFun("=>",2),tplType([])),nomnal("star.core*integer"))).
  escapeType("_time2date") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),tplType([nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*float"),nomnal("star.core*integer"),nomnal("star.core*integer")]))).
  escapeType("_time2utc") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float")])),tplType([nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*float"),nomnal("star.core*integer"),nomnal("star.core*integer")]))).
  escapeType("_date2time") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*float"),nomnal("star.core*integer")])),nomnal("star.core*float"))).
  escapeType("_utc2time") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*float"),nomnal("star.core*integer")])),nomnal("star.core*float"))).
  escapeType("_uniCodeCategory") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*integer"))).
  escapeType("_isCcChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isCfChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isCnChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isCoChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isCsChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isLlChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isLmChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isLoChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isLtChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isLuChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isMcChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isMeChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isMnChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isNdChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isNlChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isNoChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isPcChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isPdChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isPeChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isPfChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isPiChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isPoChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isPsChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isScChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isSkChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isSmChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isSoChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isZlChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isZpChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isZsChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isLetterChar") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_digitCode") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*integer"))).
  escapeType("_codePoint") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*integer"))).
  escapeType("_char") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer")])),nomnal("star.core*char"))).
  escapeType("_isIDStart") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_isIDContinue") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_int2str") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*string"))).
  escapeType("_flt2str") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*boolean")])),nomnal("star.core*string"))).
  escapeType("_int_format") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*integer"),nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_flt_format") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*float"),nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_str2flt") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tpExp(tpFun("star.core*option",1),nomnal("star.core*float")))).
  escapeType("_str2int") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tpExp(tpFun("star.core*option",1),nomnal("star.core*integer")))).
  escapeType("_chr_eq") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char"),nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_chr_lt") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char"),nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_chr_ge") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char"),nomnal("star.core*char")])),nomnal("star.core*boolean"))).
  escapeType("_chr_hash") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*integer"))).
  escapeType("_chr_quote") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*string"))).
  escapeType("_chr_format") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char"),nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_str_eq") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*string")])),nomnal("star.core*boolean"))).
  escapeType("_str_lt") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*string")])),nomnal("star.core*boolean"))).
  escapeType("_str_ge") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*string")])),nomnal("star.core*boolean"))).
  escapeType("_str_hash") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),nomnal("star.core*integer"))).
  escapeType("_str_len") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),nomnal("star.core*integer"))).
  escapeType("_str_gen") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_stringOf") => some(allType(nomnal("t"),tpExp(tpExp(tpFun("=>",2),tplType([nomnal("t"),nomnal("star.core*integer")])),nomnal("star.core*string")))).
  escapeType("_explode") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tpExp(tpFun("star.core*cons",1),nomnal("star.core*char")))).
  escapeType("_implode") => some(tpExp(tpExp(tpFun("=>",2),tplType([tpExp(tpFun("star.core*cons",1),nomnal("star.core*char"))])),nomnal("star.core*string"))).
  escapeType("_str_find") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*string"),nomnal("star.core*integer")])),nomnal("star.core*integer"))).
  escapeType("_sub_str") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*integer"),nomnal("star.core*integer")])),nomnal("star.core*string"))).
  escapeType("_str_split") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*integer")])),tplType([nomnal("star.core*string"),nomnal("star.core*string")]))).
  escapeType("_str_concat") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_str_reverse") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_str_start") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*string")])),nomnal("star.core*boolean"))).
  escapeType("_str_splice") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*integer"),nomnal("star.core*integer"),nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_str_multicat") => some(tpExp(tpExp(tpFun("=>",2),tplType([tpExp(tpFun("star.core*cons",1),nomnal("star.core*string"))])),nomnal("star.core*string"))).
  escapeType("_str_hdtl") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tplType([nomnal("star.core*char"),nomnal("star.core*string")]))).
  escapeType("_str_back") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),tplType([nomnal("star.core*string"),nomnal("star.core*char")]))).
  escapeType("_str_cons") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char"),nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_code2str") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*char")])),nomnal("star.core*string"))).
  escapeType("_str_apnd") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*char")])),nomnal("star.core*string"))).
  escapeType("_str_quote") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_str_format") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_getenv") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*string")])),nomnal("star.core*string"))).
  escapeType("_setenv") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),nomnal("star.core*string")])),tplType([]))).
  escapeType("_envir") => some(tpExp(tpExp(tpFun("=>",2),tplType([])),tpExp(tpFun("star.core*cons",1),tplType([nomnal("star.core*string"),nomnal("star.core*string")])))).
  escapeType("_getlogin") => some(tpExp(tpExp(tpFun("=>",2),tplType([])),nomnal("star.core*string"))).
  escapeType("_fork") => some(tpExp(tpExp(tpFun("=>",2),tplType([tpExp(tpExp(tpFun("=>",2),tplType([])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string"))),tplType([])])),nomnal("star.thread*thread"))).
  escapeType("_thread") => some(tpExp(tpExp(tpFun("=>",2),tplType([])),nomnal("star.thread*thread"))).
  escapeType("_kill") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.thread*thread")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_thread_state") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.thread*thread")])),nomnal("star.thread*threadState"))).
  escapeType("_waitfor") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.thread*thread")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_shell") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.core*string"),tpExp(tpFun("star.core*cons",1),nomnal("star.core*string")),tpExp(tpFun("star.core*cons",1),tplType([nomnal("star.core*string"),nomnal("star.core*string")]))])),nomnal("star.core*integer"))).
  escapeType("_newLock") => some(tpExp(tpExp(tpFun("=>",2),tplType([])),nomnal("star.thread*lock"))).
  escapeType("_acquireLock") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.thread*lock"),nomnal("star.core*float")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_waitLock") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.thread*lock"),nomnal("star.core*float")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_releaseLock") => some(tpExp(tpExp(tpFun("=>",2),tplType([nomnal("star.thread*lock")])),tpExp(tpFun("star.core*result",2),nomnal("star.core*string")))).
  escapeType("_ins_debug") => some(tpExp(tpExp(tpFun("=>",2),tplType([])),tplType([]))).
  escapeType("_stackTrace") => some(tpExp(tpExp(tpFun("=>",2),tplType([])),nomnal("star.core*string"))).
  escapeType(_) default => .none.

  public isEscape:(string)=>option[integer].
  isEscape("_exit") => some(0).
  isEscape("_abort") => some(1).
  isEscape("_definedLbl") => some(2).
  isEscape("_callLbl") => some(3).
  isEscape("_fun2cont") => some(4).
  isEscape("_int_plus") => some(5).
  isEscape("_int_minus") => some(6).
  isEscape("_int_times") => some(7).
  isEscape("_int_div") => some(8).
  isEscape("_int_mod") => some(9).
  isEscape("_int_hash") => some(10).
  isEscape("_flt_plus") => some(11).
  isEscape("_flt_minus") => some(12).
  isEscape("_flt_times") => some(13).
  isEscape("_flt_div") => some(14).
  isEscape("_flt_mod") => some(15).
  isEscape("_int_abs") => some(16).
  isEscape("_flt_abs") => some(17).
  isEscape("_int_eq") => some(18).
  isEscape("_int_lt") => some(19).
  isEscape("_int_ge") => some(20).
  isEscape("_flt_eq") => some(21).
  isEscape("_flt_lt") => some(22).
  isEscape("_flt_ge") => some(23).
  isEscape("_int2flt") => some(24).
  isEscape("_flt2int") => some(25).
  isEscape("_bits_float") => some(26).
  isEscape("_float_bits") => some(27).
  isEscape("_flt_hash") => some(28).
  isEscape("_flt_pwr") => some(29).
  isEscape("_big_plus") => some(30).
  isEscape("_big_minus") => some(31).
  isEscape("_big_times") => some(32).
  isEscape("_big_div") => some(33).
  isEscape("_big_gcd") => some(34).
  isEscape("_big_hash") => some(35).
  isEscape("_big_eq") => some(36).
  isEscape("_big_lt") => some(37).
  isEscape("_big_ge") => some(38).
  isEscape("_int2big") => some(39).
  isEscape("_big2int") => some(40).
  isEscape("_ints2big") => some(41).
  isEscape("_big2ints") => some(42).
  isEscape("_str2big") => some(43).
  isEscape("_big2str") => some(44).
  isEscape("_big_format") => some(45).
  isEscape("sqrt") => some(46).
  isEscape("exp") => some(47).
  isEscape("log") => some(48).
  isEscape("log10") => some(49).
  isEscape("pi") => some(50).
  isEscape("sin") => some(51).
  isEscape("cos") => some(52).
  isEscape("tan") => some(53).
  isEscape("asin") => some(54).
  isEscape("acos") => some(55).
  isEscape("atan") => some(56).
  isEscape("trunc") => some(57).
  isEscape("floor") => some(58).
  isEscape("ceil") => some(59).
  isEscape("integral") => some(60).
  isEscape("_irand") => some(61).
  isEscape("_random") => some(62).
  isEscape("_seed") => some(63).
  isEscape("_ldexp") => some(64).
  isEscape("_frexp") => some(65).
  isEscape("_modf") => some(66).
  isEscape("_band") => some(67).
  isEscape("_bor") => some(68).
  isEscape("_bxor") => some(69).
  isEscape("_blsl") => some(70).
  isEscape("_blsr") => some(71).
  isEscape("_basr") => some(72).
  isEscape("_bnot") => some(73).
  isEscape("_cell") => some(74).
  isEscape("_get") => some(75).
  isEscape("_assign") => some(76).
  isEscape("_overwrite") => some(77).
  isEscape("_tuple_nth") => some(78).
  isEscape("_tuple_set_nth") => some(79).
  isEscape("_cwd") => some(80).
  isEscape("_cd") => some(81).
  isEscape("_rm") => some(82).
  isEscape("_mv") => some(83).
  isEscape("_mkdir") => some(84).
  isEscape("_rmdir") => some(85).
  isEscape("_isdir") => some(86).
  isEscape("_file_chmod") => some(87).
  isEscape("_ls") => some(88).
  isEscape("_repo") => some(89).
  isEscape("_file_mode") => some(90).
  isEscape("_file_present") => some(91).
  isEscape("_file_type") => some(92).
  isEscape("_file_size") => some(93).
  isEscape("_file_modified") => some(94).
  isEscape("_file_date") => some(95).
  isEscape("_openInFile") => some(96).
  isEscape("_openOutFile") => some(97).
  isEscape("_openAppendFile") => some(98).
  isEscape("_openAppendIOFile") => some(99).
  isEscape("_popen") => some(100).
  isEscape("_close") => some(101).
  isEscape("_end_of_file") => some(102).
  isEscape("_ready_to_read") => some(103).
  isEscape("_ready_to_write") => some(104).
  isEscape("_inchars") => some(105).
  isEscape("_inchar") => some(106).
  isEscape("_inbyte") => some(107).
  isEscape("_inline") => some(108).
  isEscape("_intext") => some(109).
  isEscape("_outchar") => some(110).
  isEscape("_outbyte") => some(111).
  isEscape("_outbytes") => some(112).
  isEscape("_outtext") => some(113).
  isEscape("_stdfile") => some(114).
  isEscape("_fposition") => some(115).
  isEscape("_fseek") => some(116).
  isEscape("_flush") => some(117).
  isEscape("_flushall") => some(118).
  isEscape("_setfileencoding") => some(119).
  isEscape("_get_file") => some(120).
  isEscape("_put_file") => some(121).
  isEscape("_show") => some(122).
  isEscape("_install_pkg") => some(123).
  isEscape("_pkg_is_present") => some(124).
  isEscape("_in_manifest") => some(125).
  isEscape("_locate_in_manifest") => some(126).
  isEscape("_logmsg") => some(127).
  isEscape("_connect") => some(128).
  isEscape("_listen") => some(129).
  isEscape("_accept") => some(130).
  isEscape("_hosttoip") => some(131).
  isEscape("_iptohost") => some(132).
  isEscape("_delay") => some(133).
  isEscape("_sleep") => some(134).
  isEscape("_now") => some(135).
  isEscape("_today") => some(136).
  isEscape("_ticks") => some(137).
  isEscape("_time2date") => some(138).
  isEscape("_time2utc") => some(139).
  isEscape("_date2time") => some(140).
  isEscape("_utc2time") => some(141).
  isEscape("_uniCodeCategory") => some(142).
  isEscape("_isCcChar") => some(143).
  isEscape("_isCfChar") => some(144).
  isEscape("_isCnChar") => some(145).
  isEscape("_isCoChar") => some(146).
  isEscape("_isCsChar") => some(147).
  isEscape("_isLlChar") => some(148).
  isEscape("_isLmChar") => some(149).
  isEscape("_isLoChar") => some(150).
  isEscape("_isLtChar") => some(151).
  isEscape("_isLuChar") => some(152).
  isEscape("_isMcChar") => some(153).
  isEscape("_isMeChar") => some(154).
  isEscape("_isMnChar") => some(155).
  isEscape("_isNdChar") => some(156).
  isEscape("_isNlChar") => some(157).
  isEscape("_isNoChar") => some(158).
  isEscape("_isPcChar") => some(159).
  isEscape("_isPdChar") => some(160).
  isEscape("_isPeChar") => some(161).
  isEscape("_isPfChar") => some(162).
  isEscape("_isPiChar") => some(163).
  isEscape("_isPoChar") => some(164).
  isEscape("_isPsChar") => some(165).
  isEscape("_isScChar") => some(166).
  isEscape("_isSkChar") => some(167).
  isEscape("_isSmChar") => some(168).
  isEscape("_isSoChar") => some(169).
  isEscape("_isZlChar") => some(170).
  isEscape("_isZpChar") => some(171).
  isEscape("_isZsChar") => some(172).
  isEscape("_isLetterChar") => some(173).
  isEscape("_digitCode") => some(174).
  isEscape("_codePoint") => some(175).
  isEscape("_char") => some(176).
  isEscape("_isIDStart") => some(177).
  isEscape("_isIDContinue") => some(178).
  isEscape("_int2str") => some(179).
  isEscape("_flt2str") => some(180).
  isEscape("_int_format") => some(181).
  isEscape("_flt_format") => some(182).
  isEscape("_str2flt") => some(183).
  isEscape("_str2int") => some(184).
  isEscape("_chr_eq") => some(185).
  isEscape("_chr_lt") => some(186).
  isEscape("_chr_ge") => some(187).
  isEscape("_chr_hash") => some(188).
  isEscape("_chr_quote") => some(189).
  isEscape("_chr_format") => some(190).
  isEscape("_str_eq") => some(191).
  isEscape("_str_lt") => some(192).
  isEscape("_str_ge") => some(193).
  isEscape("_str_hash") => some(194).
  isEscape("_str_len") => some(195).
  isEscape("_str_gen") => some(196).
  isEscape("_stringOf") => some(197).
  isEscape("_explode") => some(198).
  isEscape("_implode") => some(199).
  isEscape("_str_find") => some(200).
  isEscape("_sub_str") => some(201).
  isEscape("_str_split") => some(202).
  isEscape("_str_concat") => some(203).
  isEscape("_str_reverse") => some(204).
  isEscape("_str_start") => some(205).
  isEscape("_str_splice") => some(206).
  isEscape("_str_multicat") => some(207).
  isEscape("_str_hdtl") => some(208).
  isEscape("_str_back") => some(209).
  isEscape("_str_cons") => some(210).
  isEscape("_code2str") => some(211).
  isEscape("_str_apnd") => some(212).
  isEscape("_str_quote") => some(213).
  isEscape("_str_format") => some(214).
  isEscape("_getenv") => some(215).
  isEscape("_setenv") => some(216).
  isEscape("_envir") => some(217).
  isEscape("_getlogin") => some(218).
  isEscape("_fork") => some(219).
  isEscape("_thread") => some(220).
  isEscape("_kill") => some(221).
  isEscape("_thread_state") => some(222).
  isEscape("_waitfor") => some(223).
  isEscape("_shell") => some(224).
  isEscape("_newLock") => some(225).
  isEscape("_acquireLock") => some(226).
  isEscape("_waitLock") => some(227).
  isEscape("_releaseLock") => some(228).
  isEscape("_ins_debug") => some(229).
  isEscape("_stackTrace") => some(230).
  isEscape(_) default => .none.
}.
