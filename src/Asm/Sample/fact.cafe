-- fact in cafe assembler
-- Equivalent to
-- fact(0) => 1
-- fact(N) => fact(N-1)*N

package test.fact :: "I{'fact'F(i)i'_main'F()()}{}"

fact/1 :: "F(i)i"
     enter 0
     ld a[0]
     ld 0
     escape _int_eq
     frame "0:2"
     bf nonZero
     ld 1
     ret
nonZero:
     ld a[0]  -- start call to fact(N-1)
     ld 1
     escape _int_minus
     frame "0:2"
     call fact/1 -- fact itself
     frame "0:1"
     ld a[0]
     escape _int_times
     frame "0:2"
     ret
     end

_main/0:: "F()()"
local X "i" next last
next:
     enter 0
     ld 5
     call fact/1
     frame "0:1"
last:
     halt
     end

     end

     

